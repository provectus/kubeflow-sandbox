{
  "version": 4,
  "terraform_version": "0.12.31",
  "serial": 120,
  "lineage": "a5cb2df2-2ca2-c5c4-914b-272c927a9939",
  "outputs": {},
  "resources": [
    {
      "module": "module.sak_kubeflow.module.kubernetes",
      "mode": "data",
      "type": "aws_ami",
      "name": "eks_gpu_worker",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-0f26242b5eb60f15b",
                  "volume_size": "20",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "creation_date": "2021-05-01T11:01:57.000Z",
            "description": "EKS Kubernetes Worker AMI for Machine Learning Accelerated Workloads on AmazonLinux2 image (k8s: 1.16.15, docker: 19.03.13ce-1.amzn2, containerd: 1.4.1-2.amzn2)",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "amazon-eks-gpu-node-1.16-*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-04e5c76f0f3d5c556",
            "image_id": "ami-04e5c76f0f3d5c556",
            "image_location": "amazon/amazon-eks-gpu-node-1.16-v20210501",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "amazon-eks-gpu-node-1.16-v20210501",
            "name_regex": null,
            "owner_id": "602401143452",
            "owners": [
              "602401143452"
            ],
            "platform": null,
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/xvda",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-0f26242b5eb60f15b",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "aws_ami",
      "name": "eks_worker",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-0af8959d6b93c116e",
                  "volume_size": "20",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "creation_date": "2021-05-01T10:51:23.000Z",
            "description": "EKS Kubernetes Worker AMI with AmazonLinux2 image, (k8s: 1.16.15, docker: 19.03.13ce-1.amzn2, containerd: 1.4.1-2.amzn2)",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "amazon-eks-node-1.16-v*"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-079f80e97bd446bd3",
            "image_id": "ami-079f80e97bd446bd3",
            "image_location": "amazon/amazon-eks-node-1.16-v20210501",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "amazon-eks-node-1.16-v20210501",
            "name_regex": null,
            "owner_id": "602401143452",
            "owners": [
              "602401143452"
            ],
            "platform": null,
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/xvda",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-0af8959d6b93c116e",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "aws_ami",
      "name": "eks_worker_windows",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architecture": "x86_64",
            "block_device_mappings": [
              {
                "device_name": "/dev/sda1",
                "ebs": {
                  "delete_on_termination": "true",
                  "encrypted": "false",
                  "iops": "0",
                  "snapshot_id": "snap-06fd07f6643423570",
                  "volume_size": "50",
                  "volume_type": "gp2"
                },
                "no_device": "",
                "virtual_name": ""
              },
              {
                "device_name": "xvdca",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral0"
              },
              {
                "device_name": "xvdcb",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral1"
              },
              {
                "device_name": "xvdcc",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral2"
              },
              {
                "device_name": "xvdcd",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral3"
              },
              {
                "device_name": "xvdce",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral4"
              },
              {
                "device_name": "xvdcf",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral5"
              },
              {
                "device_name": "xvdcg",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral6"
              },
              {
                "device_name": "xvdch",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral7"
              },
              {
                "device_name": "xvdci",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral8"
              },
              {
                "device_name": "xvdcj",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral9"
              },
              {
                "device_name": "xvdck",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral10"
              },
              {
                "device_name": "xvdcl",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral11"
              },
              {
                "device_name": "xvdcm",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral12"
              },
              {
                "device_name": "xvdcn",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral13"
              },
              {
                "device_name": "xvdco",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral14"
              },
              {
                "device_name": "xvdcp",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral15"
              },
              {
                "device_name": "xvdcq",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral16"
              },
              {
                "device_name": "xvdcr",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral17"
              },
              {
                "device_name": "xvdcs",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral18"
              },
              {
                "device_name": "xvdct",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral19"
              },
              {
                "device_name": "xvdcu",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral20"
              },
              {
                "device_name": "xvdcv",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral21"
              },
              {
                "device_name": "xvdcw",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral22"
              },
              {
                "device_name": "xvdcx",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral23"
              },
              {
                "device_name": "xvdcy",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral24"
              },
              {
                "device_name": "xvdcz",
                "ebs": {},
                "no_device": "",
                "virtual_name": "ephemeral25"
              }
            ],
            "creation_date": "2021-04-15T19:43:53.000Z",
            "description": "Microsoft Windows Server 2019 Core optimized for EKS and provided by Amazon",
            "executable_users": null,
            "filter": [
              {
                "name": "name",
                "values": [
                  "Windows_Server-2019-English-Core-EKS_Optimized-1.16-*"
                ]
              },
              {
                "name": "platform",
                "values": [
                  "windows"
                ]
              }
            ],
            "hypervisor": "xen",
            "id": "ami-076b034e59720e061",
            "image_id": "ami-076b034e59720e061",
            "image_location": "amazon/Windows_Server-2019-English-Core-EKS_Optimized-1.16-2021.04.14",
            "image_owner_alias": "amazon",
            "image_type": "machine",
            "kernel_id": null,
            "most_recent": true,
            "name": "Windows_Server-2019-English-Core-EKS_Optimized-1.16-2021.04.14",
            "name_regex": null,
            "owner_id": "801119661308",
            "owners": [
              "801119661308"
            ],
            "platform": "windows",
            "product_codes": [],
            "public": true,
            "ramdisk_id": null,
            "root_device_name": "/dev/sda1",
            "root_device_type": "ebs",
            "root_snapshot_id": "snap-06fd07f6643423570",
            "sriov_net_support": "simple",
            "state": "available",
            "state_reason": {
              "code": "UNSET",
              "message": "UNSET"
            },
            "tags": {},
            "virtualization_type": "hvm"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network",
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "blacklisted_names": null,
            "blacklisted_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-west-2"
            ],
            "id": "2021-05-06 08:55:44.523184 +0000 UTC",
            "names": [
              "us-west-2a",
              "us-west-2b",
              "us-west-2c",
              "us-west-2d"
            ],
            "state": null,
            "zone_ids": [
              "usw2-az1",
              "usw2-az2",
              "usw2-az3",
              "usw2-az4"
            ]
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "641456973426",
            "arn": "arn:aws:iam::641456973426:user/dkharlamov",
            "id": "2021-05-06 08:55:45.625132 +0000 UTC",
            "user_id": "AIDAZKWOQUZZDRNTOKGIH"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "641456973426",
            "arn": "arn:aws:iam::641456973426:user/dkharlamov",
            "id": "2021-05-06 08:55:45.209444 +0000 UTC",
            "user_id": "AIDAZKWOQUZZDRNTOKGIH"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "641456973426",
            "arn": "arn:aws:iam::641456973426:user/dkharlamov",
            "id": "2021-05-06 08:55:45.808906 +0000 UTC",
            "user_id": "AIDAZKWOQUZZDRNTOKGIH"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "641456973426",
            "arn": "arn:aws:iam::641456973426:user/dkharlamov",
            "id": "2021-05-06 08:55:45.164259 +0000 UTC",
            "user_id": "AIDAZKWOQUZZDRNTOKGIH"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "641456973426",
            "arn": "arn:aws:iam::641456973426:user/dkharlamov",
            "id": "2021-05-06 08:55:45.184446 +0000 UTC",
            "user_id": "AIDAZKWOQUZZDRNTOKGIH"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "641456973426",
            "arn": "arn:aws:iam::641456973426:user/dkharlamov",
            "id": "2021-05-06 08:55:45.802398 +0000 UTC",
            "user_id": "AIDAZKWOQUZZDRNTOKGIH"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "641456973426",
            "arn": "arn:aws:iam::641456973426:user/dkharlamov",
            "id": "2021-05-06 08:55:45.199213 +0000 UTC",
            "user_id": "AIDAZKWOQUZZDRNTOKGIH"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "641456973426",
            "arn": "arn:aws:iam::641456973426:user/dkharlamov",
            "id": "2021-05-06 08:55:45.773162 +0000 UTC",
            "user_id": "AIDAZKWOQUZZDRNTOKGIH"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:641456973426:cluster/testcognito",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOakE0TVRRME1Gb1hEVE14TURVd05EQTRNVFEwTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWFNCjRFS3dldDExLzNKOTg1eldtRHpYTExJaW9wcXllbGxBeThoTWR6eXIwRC8xZ0YrQmFPYjZDdE9vRDNWd0NCZlEKdzZ1NmlqSHNqVWx2QlBZS3NZYzdzbUloUm9vbUsrNEtKOEl1YjVGRllpY3FaL2FxWjdteXFtWlJScGJuTUdzYwp5cGJOWGQrOHd0UXJXK0NLdUlBa2I5UDZUT2xTNnNZNW0vSjh0QnRIUUh5T01CeDNCbzRqVjBNcHpraEQzM0x4CnIzV3ZxWHRYYXhQcVZSaGNCZ1BtL2JDNWZFRSs4c0pIbHUwTkMwb2RFZHQzQXVuYnErTm53UDljblV5MzlLU20KUC9qSVRKaFJUVlB3Y2R6Ris4Mk56NmJ2N3ZnT0FBdlNsaE5kc2Zra0dGNGlWaWhrWmxYQzJybzJhZWkyWWFtUgpIbEp2b3A1OExZYTg0eENwUi9NQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHS3dSeHEzUEQrRHljdmdWeTdkZDhJLy9yUFEKWTRiYVpnUnNCdFlFS1QxSG9QaTFteEpYcXJ6dGxaN1dVS2NHQkxoTHl3QUdCZE51KzBVT1JEUDRpRTNGOVhTOAo5WDliRGNoZU1sbnhSc3FINXZJTE80SjJKL3ZrYzFzdEFJa0Fwc0krN0g4Q3RpZHF3NXk1eENoUi9IWGY2U1ByCmpRWkFreUxDMkV4M0ZrMXB2cXlWSXpOZjNzV3V2Q2FxUTVCa0ZpT0R1cTVKOUJGaFVWSjBHNTFkZFNrbndaSnoKMDZPTnFQYUhiSTdwVjBoNjhxNWl1QjJPZGppa3BnaU41Vkg5RUNLU3NwYWw3dXRpd2FlU3JPeXA5R0w4NEZ3ZwozZ0Y3bzBSV3Y4TkRDVjB3NytqYy9ITlpiSEg2UDdPc0k4MXJVYzR3SXF4cXlpTldONFdqSWk1djRTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2021-05-06 08:08:17 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://0FC308064829AA5344C9F0A1D888965B.gr7.us-west-2.eks.amazonaws.com",
            "id": "testcognito",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                  }
                ]
              }
            ],
            "name": "testcognito",
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::641456973426:role/testcognito20210506080753953600000002",
            "status": "ACTIVE",
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "version": "1.16",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-09d5b45c982d929c4",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0303636fd233210b2"
                ],
                "subnet_ids": [
                  "subnet-0abea3994a93cbc27",
                  "subnet-0fec41c314798d8cc"
                ],
                "vpc_id": "vpc-0503cb09e8aad6d2f"
              }
            ]
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:641456973426:cluster/testcognito",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOakE0TVRRME1Gb1hEVE14TURVd05EQTRNVFEwTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWFNCjRFS3dldDExLzNKOTg1eldtRHpYTExJaW9wcXllbGxBeThoTWR6eXIwRC8xZ0YrQmFPYjZDdE9vRDNWd0NCZlEKdzZ1NmlqSHNqVWx2QlBZS3NZYzdzbUloUm9vbUsrNEtKOEl1YjVGRllpY3FaL2FxWjdteXFtWlJScGJuTUdzYwp5cGJOWGQrOHd0UXJXK0NLdUlBa2I5UDZUT2xTNnNZNW0vSjh0QnRIUUh5T01CeDNCbzRqVjBNcHpraEQzM0x4CnIzV3ZxWHRYYXhQcVZSaGNCZ1BtL2JDNWZFRSs4c0pIbHUwTkMwb2RFZHQzQXVuYnErTm53UDljblV5MzlLU20KUC9qSVRKaFJUVlB3Y2R6Ris4Mk56NmJ2N3ZnT0FBdlNsaE5kc2Zra0dGNGlWaWhrWmxYQzJybzJhZWkyWWFtUgpIbEp2b3A1OExZYTg0eENwUi9NQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHS3dSeHEzUEQrRHljdmdWeTdkZDhJLy9yUFEKWTRiYVpnUnNCdFlFS1QxSG9QaTFteEpYcXJ6dGxaN1dVS2NHQkxoTHl3QUdCZE51KzBVT1JEUDRpRTNGOVhTOAo5WDliRGNoZU1sbnhSc3FINXZJTE80SjJKL3ZrYzFzdEFJa0Fwc0krN0g4Q3RpZHF3NXk1eENoUi9IWGY2U1ByCmpRWkFreUxDMkV4M0ZrMXB2cXlWSXpOZjNzV3V2Q2FxUTVCa0ZpT0R1cTVKOUJGaFVWSjBHNTFkZFNrbndaSnoKMDZPTnFQYUhiSTdwVjBoNjhxNWl1QjJPZGppa3BnaU41Vkg5RUNLU3NwYWw3dXRpd2FlU3JPeXA5R0w4NEZ3ZwozZ0Y3bzBSV3Y4TkRDVjB3NytqYy9ITlpiSEg2UDdPc0k4MXJVYzR3SXF4cXlpTldONFdqSWk1djRTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2021-05-06 08:08:17 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://0FC308064829AA5344C9F0A1D888965B.gr7.us-west-2.eks.amazonaws.com",
            "id": "testcognito",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                  }
                ]
              }
            ],
            "name": "testcognito",
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::641456973426:role/testcognito20210506080753953600000002",
            "status": "ACTIVE",
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "version": "1.16",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-09d5b45c982d929c4",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0303636fd233210b2"
                ],
                "subnet_ids": [
                  "subnet-0abea3994a93cbc27",
                  "subnet-0fec41c314798d8cc"
                ],
                "vpc_id": "vpc-0503cb09e8aad6d2f"
              }
            ]
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:641456973426:cluster/testcognito",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOakE0TVRRME1Gb1hEVE14TURVd05EQTRNVFEwTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWFNCjRFS3dldDExLzNKOTg1eldtRHpYTExJaW9wcXllbGxBeThoTWR6eXIwRC8xZ0YrQmFPYjZDdE9vRDNWd0NCZlEKdzZ1NmlqSHNqVWx2QlBZS3NZYzdzbUloUm9vbUsrNEtKOEl1YjVGRllpY3FaL2FxWjdteXFtWlJScGJuTUdzYwp5cGJOWGQrOHd0UXJXK0NLdUlBa2I5UDZUT2xTNnNZNW0vSjh0QnRIUUh5T01CeDNCbzRqVjBNcHpraEQzM0x4CnIzV3ZxWHRYYXhQcVZSaGNCZ1BtL2JDNWZFRSs4c0pIbHUwTkMwb2RFZHQzQXVuYnErTm53UDljblV5MzlLU20KUC9qSVRKaFJUVlB3Y2R6Ris4Mk56NmJ2N3ZnT0FBdlNsaE5kc2Zra0dGNGlWaWhrWmxYQzJybzJhZWkyWWFtUgpIbEp2b3A1OExZYTg0eENwUi9NQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHS3dSeHEzUEQrRHljdmdWeTdkZDhJLy9yUFEKWTRiYVpnUnNCdFlFS1QxSG9QaTFteEpYcXJ6dGxaN1dVS2NHQkxoTHl3QUdCZE51KzBVT1JEUDRpRTNGOVhTOAo5WDliRGNoZU1sbnhSc3FINXZJTE80SjJKL3ZrYzFzdEFJa0Fwc0krN0g4Q3RpZHF3NXk1eENoUi9IWGY2U1ByCmpRWkFreUxDMkV4M0ZrMXB2cXlWSXpOZjNzV3V2Q2FxUTVCa0ZpT0R1cTVKOUJGaFVWSjBHNTFkZFNrbndaSnoKMDZPTnFQYUhiSTdwVjBoNjhxNWl1QjJPZGppa3BnaU41Vkg5RUNLU3NwYWw3dXRpd2FlU3JPeXA5R0w4NEZ3ZwozZ0Y3bzBSV3Y4TkRDVjB3NytqYy9ITlpiSEg2UDdPc0k4MXJVYzR3SXF4cXlpTldONFdqSWk1djRTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2021-05-06 08:08:17 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://0FC308064829AA5344C9F0A1D888965B.gr7.us-west-2.eks.amazonaws.com",
            "id": "testcognito",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                  }
                ]
              }
            ],
            "name": "testcognito",
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::641456973426:role/testcognito20210506080753953600000002",
            "status": "ACTIVE",
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "version": "1.16",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-09d5b45c982d929c4",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0303636fd233210b2"
                ],
                "subnet_ids": [
                  "subnet-0abea3994a93cbc27",
                  "subnet-0fec41c314798d8cc"
                ],
                "vpc_id": "vpc-0503cb09e8aad6d2f"
              }
            ]
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:641456973426:cluster/testcognito",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOakE0TVRRME1Gb1hEVE14TURVd05EQTRNVFEwTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWFNCjRFS3dldDExLzNKOTg1eldtRHpYTExJaW9wcXllbGxBeThoTWR6eXIwRC8xZ0YrQmFPYjZDdE9vRDNWd0NCZlEKdzZ1NmlqSHNqVWx2QlBZS3NZYzdzbUloUm9vbUsrNEtKOEl1YjVGRllpY3FaL2FxWjdteXFtWlJScGJuTUdzYwp5cGJOWGQrOHd0UXJXK0NLdUlBa2I5UDZUT2xTNnNZNW0vSjh0QnRIUUh5T01CeDNCbzRqVjBNcHpraEQzM0x4CnIzV3ZxWHRYYXhQcVZSaGNCZ1BtL2JDNWZFRSs4c0pIbHUwTkMwb2RFZHQzQXVuYnErTm53UDljblV5MzlLU20KUC9qSVRKaFJUVlB3Y2R6Ris4Mk56NmJ2N3ZnT0FBdlNsaE5kc2Zra0dGNGlWaWhrWmxYQzJybzJhZWkyWWFtUgpIbEp2b3A1OExZYTg0eENwUi9NQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHS3dSeHEzUEQrRHljdmdWeTdkZDhJLy9yUFEKWTRiYVpnUnNCdFlFS1QxSG9QaTFteEpYcXJ6dGxaN1dVS2NHQkxoTHl3QUdCZE51KzBVT1JEUDRpRTNGOVhTOAo5WDliRGNoZU1sbnhSc3FINXZJTE80SjJKL3ZrYzFzdEFJa0Fwc0krN0g4Q3RpZHF3NXk1eENoUi9IWGY2U1ByCmpRWkFreUxDMkV4M0ZrMXB2cXlWSXpOZjNzV3V2Q2FxUTVCa0ZpT0R1cTVKOUJGaFVWSjBHNTFkZFNrbndaSnoKMDZPTnFQYUhiSTdwVjBoNjhxNWl1QjJPZGppa3BnaU41Vkg5RUNLU3NwYWw3dXRpd2FlU3JPeXA5R0w4NEZ3ZwozZ0Y3bzBSV3Y4TkRDVjB3NytqYy9ITlpiSEg2UDdPc0k4MXJVYzR3SXF4cXlpTldONFdqSWk1djRTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2021-05-06 08:08:17 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://0FC308064829AA5344C9F0A1D888965B.gr7.us-west-2.eks.amazonaws.com",
            "id": "testcognito",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                  }
                ]
              }
            ],
            "name": "testcognito",
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::641456973426:role/testcognito20210506080753953600000002",
            "status": "ACTIVE",
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "version": "1.16",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-09d5b45c982d929c4",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0303636fd233210b2"
                ],
                "subnet_ids": [
                  "subnet-0abea3994a93cbc27",
                  "subnet-0fec41c314798d8cc"
                ],
                "vpc_id": "vpc-0503cb09e8aad6d2f"
              }
            ]
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:641456973426:cluster/testcognito",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOakE0TVRRME1Gb1hEVE14TURVd05EQTRNVFEwTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWFNCjRFS3dldDExLzNKOTg1eldtRHpYTExJaW9wcXllbGxBeThoTWR6eXIwRC8xZ0YrQmFPYjZDdE9vRDNWd0NCZlEKdzZ1NmlqSHNqVWx2QlBZS3NZYzdzbUloUm9vbUsrNEtKOEl1YjVGRllpY3FaL2FxWjdteXFtWlJScGJuTUdzYwp5cGJOWGQrOHd0UXJXK0NLdUlBa2I5UDZUT2xTNnNZNW0vSjh0QnRIUUh5T01CeDNCbzRqVjBNcHpraEQzM0x4CnIzV3ZxWHRYYXhQcVZSaGNCZ1BtL2JDNWZFRSs4c0pIbHUwTkMwb2RFZHQzQXVuYnErTm53UDljblV5MzlLU20KUC9qSVRKaFJUVlB3Y2R6Ris4Mk56NmJ2N3ZnT0FBdlNsaE5kc2Zra0dGNGlWaWhrWmxYQzJybzJhZWkyWWFtUgpIbEp2b3A1OExZYTg0eENwUi9NQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHS3dSeHEzUEQrRHljdmdWeTdkZDhJLy9yUFEKWTRiYVpnUnNCdFlFS1QxSG9QaTFteEpYcXJ6dGxaN1dVS2NHQkxoTHl3QUdCZE51KzBVT1JEUDRpRTNGOVhTOAo5WDliRGNoZU1sbnhSc3FINXZJTE80SjJKL3ZrYzFzdEFJa0Fwc0krN0g4Q3RpZHF3NXk1eENoUi9IWGY2U1ByCmpRWkFreUxDMkV4M0ZrMXB2cXlWSXpOZjNzV3V2Q2FxUTVCa0ZpT0R1cTVKOUJGaFVWSjBHNTFkZFNrbndaSnoKMDZPTnFQYUhiSTdwVjBoNjhxNWl1QjJPZGppa3BnaU41Vkg5RUNLU3NwYWw3dXRpd2FlU3JPeXA5R0w4NEZ3ZwozZ0Y3bzBSV3Y4TkRDVjB3NytqYy9ITlpiSEg2UDdPc0k4MXJVYzR3SXF4cXlpTldONFdqSWk1djRTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2021-05-06 08:08:17 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://0FC308064829AA5344C9F0A1D888965B.gr7.us-west-2.eks.amazonaws.com",
            "id": "testcognito",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                  }
                ]
              }
            ],
            "name": "testcognito",
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::641456973426:role/testcognito20210506080753953600000002",
            "status": "ACTIVE",
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "version": "1.16",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-09d5b45c982d929c4",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0303636fd233210b2"
                ],
                "subnet_ids": [
                  "subnet-0abea3994a93cbc27",
                  "subnet-0fec41c314798d8cc"
                ],
                "vpc_id": "vpc-0503cb09e8aad6d2f"
              }
            ]
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:641456973426:cluster/testcognito",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOakE0TVRRME1Gb1hEVE14TURVd05EQTRNVFEwTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWFNCjRFS3dldDExLzNKOTg1eldtRHpYTExJaW9wcXllbGxBeThoTWR6eXIwRC8xZ0YrQmFPYjZDdE9vRDNWd0NCZlEKdzZ1NmlqSHNqVWx2QlBZS3NZYzdzbUloUm9vbUsrNEtKOEl1YjVGRllpY3FaL2FxWjdteXFtWlJScGJuTUdzYwp5cGJOWGQrOHd0UXJXK0NLdUlBa2I5UDZUT2xTNnNZNW0vSjh0QnRIUUh5T01CeDNCbzRqVjBNcHpraEQzM0x4CnIzV3ZxWHRYYXhQcVZSaGNCZ1BtL2JDNWZFRSs4c0pIbHUwTkMwb2RFZHQzQXVuYnErTm53UDljblV5MzlLU20KUC9qSVRKaFJUVlB3Y2R6Ris4Mk56NmJ2N3ZnT0FBdlNsaE5kc2Zra0dGNGlWaWhrWmxYQzJybzJhZWkyWWFtUgpIbEp2b3A1OExZYTg0eENwUi9NQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHS3dSeHEzUEQrRHljdmdWeTdkZDhJLy9yUFEKWTRiYVpnUnNCdFlFS1QxSG9QaTFteEpYcXJ6dGxaN1dVS2NHQkxoTHl3QUdCZE51KzBVT1JEUDRpRTNGOVhTOAo5WDliRGNoZU1sbnhSc3FINXZJTE80SjJKL3ZrYzFzdEFJa0Fwc0krN0g4Q3RpZHF3NXk1eENoUi9IWGY2U1ByCmpRWkFreUxDMkV4M0ZrMXB2cXlWSXpOZjNzV3V2Q2FxUTVCa0ZpT0R1cTVKOUJGaFVWSjBHNTFkZFNrbndaSnoKMDZPTnFQYUhiSTdwVjBoNjhxNWl1QjJPZGppa3BnaU41Vkg5RUNLU3NwYWw3dXRpd2FlU3JPeXA5R0w4NEZ3ZwozZ0Y3bzBSV3Y4TkRDVjB3NytqYy9ITlpiSEg2UDdPc0k4MXJVYzR3SXF4cXlpTldONFdqSWk1djRTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2021-05-06 08:08:17 +0000 UTC",
            "enabled_cluster_log_types": [],
            "endpoint": "https://0FC308064829AA5344C9F0A1D888965B.gr7.us-west-2.eks.amazonaws.com",
            "id": "testcognito",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                  }
                ]
              }
            ],
            "name": "testcognito",
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::641456973426:role/testcognito20210506080753953600000002",
            "status": "ACTIVE",
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "version": "1.16",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-09d5b45c982d929c4",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0303636fd233210b2"
                ],
                "subnet_ids": [
                  "subnet-0abea3994a93cbc27",
                  "subnet-0fec41c314798d8cc"
                ],
                "vpc_id": "vpc-0503cb09e8aad6d2f"
              }
            ]
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow",
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2021-05-06 08:55:57.417922 +0000 UTC",
            "name": "testcognito",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFaS1dPUVVaWkdGRlNWMkVDJTJGMjAyMTA1MDYlMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIxMDUwNlQwODU1NTdaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPTU1OGFmMDY4ZTAxYzU3ZmM2ODI2ZTdlY2VlNjViZDMwNjdmMDYzMzhhZWQxOGVjYWNmNDViMGY3NTZkOTZlZjY"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "aws_iam_instance_profile",
      "name": "custom_worker_group_iam_instance_profile",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "aws_iam_instance_profile",
      "name": "custom_worker_group_launch_template_iam_instance_profile",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.argocd.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_with_oidc",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "4198191056",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\": \"system:serviceaccount:argocd:argocd\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:argocd:argocd"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_with_oidc",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1448010435",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\": \"system:serviceaccount:cert-manager:cert-manager\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:cert-manager:cert-manager"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_with_oidc",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1490846099",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\": \"system:serviceaccount:kube-system:external-dns\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:external-dns"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_with_oidc",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2592747884",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\": \"system:serviceaccount:kube-system:aws-cluster-autoscaler-chart\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:aws-cluster-autoscaler-chart"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_with_oidc",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3424276117",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\": \"system:serviceaccount:ingress-system:aws-alb-ingress-controller\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:ingress-system:aws-alb-ingress-controller"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_assume_role_policy",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "cluster_autoscaler",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2994668936",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"clusterAutoscalerAll\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeLaunchTemplateVersions\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"clusterAutoscalerOwn\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"autoscaling:UpdateAutoScalingGroup\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"autoscaling:SetDesiredCapacity\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled\": \"true\",\n          \"autoscaling:ResourceTag/kubernetes.io/cluster/testcognito\": \"owned\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeAutoScalingInstances",
                  "autoscaling:DescribeLaunchConfigurations",
                  "autoscaling:DescribeTags",
                  "ec2:DescribeLaunchTemplateVersions"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "clusterAutoscalerAll"
              },
              {
                "actions": [
                  "autoscaling:SetDesiredCapacity",
                  "autoscaling:TerminateInstanceInAutoScalingGroup",
                  "autoscaling:UpdateAutoScalingGroup"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "owned"
                    ],
                    "variable": "autoscaling:ResourceTag/kubernetes.io/cluster/testcognito"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "true"
                    ],
                    "variable": "autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "clusterAutoscalerOwn"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "flow_log_cloudwatch_assume_role",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2602620918",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf:GetWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"tag:TagResources\",\n        \"tag:GetResources\",\n        \"shield:ListProtections\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeSubscription\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"iam:CreateServiceLinkedRole\",\n        \"elasticloadbalancing:SetWebACL\",\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"elasticloadbalancing:DeregisterTargets\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteLoadBalancer\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateLoadBalancer\",\n        \"elasticloadbalancing:CreateListener\",\n        \"elasticloadbalancing:AddTags\",\n        \"elasticloadbalancing:AddListenerCertificates\",\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:ModifyNetworkInterfaceAttribute\",\n        \"ec2:ModifyInstanceAttribute\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeInstanceStatus\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\",\n        \"ec2:DeleteTags\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:CreateTags\",\n        \"ec2:CreateSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:GetCertificate\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "acm:DescribeCertificate",
                  "acm:GetCertificate",
                  "acm:ListCertificates",
                  "cognito-idp:DescribeUserPoolClient",
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CreateSecurityGroup",
                  "ec2:CreateTags",
                  "ec2:DeleteSecurityGroup",
                  "ec2:DeleteTags",
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeInstanceStatus",
                  "ec2:DescribeInstances",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcs",
                  "ec2:ModifyInstanceAttribute",
                  "ec2:ModifyNetworkInterfaceAttribute",
                  "ec2:RevokeSecurityGroupIngress",
                  "elasticloadbalancing:AddListenerCertificates",
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:CreateTargetGroup",
                  "elasticloadbalancing:DeleteListener",
                  "elasticloadbalancing:DeleteLoadBalancer",
                  "elasticloadbalancing:DeleteRule",
                  "elasticloadbalancing:DeleteTargetGroup",
                  "elasticloadbalancing:DeregisterTargets",
                  "elasticloadbalancing:DescribeListenerCertificates",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeSSLPolicies",
                  "elasticloadbalancing:DescribeTags",
                  "elasticloadbalancing:DescribeTargetGroupAttributes",
                  "elasticloadbalancing:DescribeTargetGroups",
                  "elasticloadbalancing:DescribeTargetHealth",
                  "elasticloadbalancing:ModifyListener",
                  "elasticloadbalancing:ModifyLoadBalancerAttributes",
                  "elasticloadbalancing:ModifyRule",
                  "elasticloadbalancing:ModifyTargetGroup",
                  "elasticloadbalancing:ModifyTargetGroupAttributes",
                  "elasticloadbalancing:RegisterTargets",
                  "elasticloadbalancing:RemoveListenerCertificates",
                  "elasticloadbalancing:RemoveTags",
                  "elasticloadbalancing:SetIpAddressType",
                  "elasticloadbalancing:SetSecurityGroups",
                  "elasticloadbalancing:SetSubnets",
                  "elasticloadbalancing:SetWebACL",
                  "iam:CreateServiceLinkedRole",
                  "iam:GetServerCertificate",
                  "iam:ListServerCertificates",
                  "shield:CreateProtection",
                  "shield:DeleteProtection",
                  "shield:DescribeProtection",
                  "shield:DescribeSubscription",
                  "shield:GetSubscriptionState",
                  "shield:ListProtections",
                  "tag:GetResources",
                  "tag:TagResources",
                  "waf-regional:AssociateWebACL",
                  "waf-regional:DisassociateWebACL",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "waf:GetWebACL",
                  "wafv2:AssociateWebACL",
                  "wafv2:DisassociateWebACL",
                  "wafv2:GetWebACL",
                  "wafv2:GetWebACLForResource"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3506649569",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"ArgoCDOwn\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:Decrypt\",\n      \"Resource\": \"arn:aws:kms:us-west-2:641456973426:key/641787b0-0b2b-4e8d-98c6-038f9f0322fd\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "kms:Decrypt"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:kms:us-west-2:641456973426:key/641787b0-0b2b-4e8d-98c6-038f9f0322fd"
                ],
                "sid": "ArgoCDOwn"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "vpc_flow_log_cloudwatch",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "workers_assume_role_policy",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3778018924",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSWorkerAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "ec2.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSWorkerAssumeRole"
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "aws_iam_role",
      "name": "custom_cluster_iam_role",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress.module.iam_assumable_role_admin",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "2021-05-06 08:55:44.993388 +0000 UTC",
            "partition": "aws"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "2021-05-06 08:55:44.519388 +0000 UTC",
            "partition": "aws"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "current": null,
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "current": null,
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "current": null,
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "current": null,
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "current": null,
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager",
      "mode": "data",
      "type": "aws_vpc",
      "name": "main",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:vpc/vpc-0503cb09e8aad6d2f",
            "cidr_block": "10.10.0.0/16",
            "cidr_block_associations": [
              {
                "association_id": "vpc-cidr-assoc-0fffffb27da3e1eea",
                "cidr_block": "10.10.0.0/16",
                "state": "associated"
              }
            ],
            "default": false,
            "dhcp_options_id": "dopt-5b85d223",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "filter": null,
            "id": "vpc-0503cb09e8aad6d2f",
            "instance_tenancy": "default",
            "ipv6_association_id": null,
            "ipv6_cidr_block": null,
            "main_route_table_id": "rtb-083c410f24ca7612f",
            "owner_id": "641456973426",
            "state": "available",
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito",
              "Project": "Kubeflow",
              "Terraform": "true"
            }
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns",
      "mode": "data",
      "type": "aws_vpc",
      "name": "main",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:vpc/vpc-0503cb09e8aad6d2f",
            "cidr_block": "10.10.0.0/16",
            "cidr_block_associations": [
              {
                "association_id": "vpc-cidr-assoc-0fffffb27da3e1eea",
                "cidr_block": "10.10.0.0/16",
                "state": "associated"
              }
            ],
            "default": false,
            "dhcp_options_id": "dopt-5b85d223",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "filter": null,
            "id": "vpc-0503cb09e8aad6d2f",
            "instance_tenancy": "default",
            "ipv6_association_id": null,
            "ipv6_cidr_block": null,
            "main_route_table_id": "rtb-083c410f24ca7612f",
            "owner_id": "641456973426",
            "state": "available",
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito",
              "Project": "Kubeflow",
              "Terraform": "true"
            }
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "apigw",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "appmesh_envoy_management",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "appstream",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "athena",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "cloud_directory",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "cloudformation",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "cloudtrail",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "codebuild",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "codecommit",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "codepipeline",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "config",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "dynamodb",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ec2",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ec2_autoscaling",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ec2messages",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecr_api",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecr_dkr",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecs",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecs_agent",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ecs_telemetry",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "efs",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "elasticloadbalancing",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "events",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "git_codecommit",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "glue",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "kinesis_firehose",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "kinesis_streams",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "kms",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "logs",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "monitoring",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "rekognition",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "s3",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sagemaker_api",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sagemaker_notebook",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sagemaker_runtime",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "secretsmanager",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "servicecatalog",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sns",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sqs",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ssm",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "ssmmessages",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "storagegateway",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "sts",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "transfer",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "data",
      "type": "aws_vpc_endpoint_service",
      "name": "transferserver",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "data",
      "type": "null_data_source",
      "name": "node_groups",
      "each": "list",
      "provider": "provider.null",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "has_computed_default": "default",
            "id": "static",
            "inputs": {
              "aws_auth": "kube-system/aws-auth",
              "cluster_name": "testcognito",
              "role_CNI_Policy": "testcognito20210506085834656400000003-20210506085837455200000006",
              "role_Container": "testcognito20210506085834656400000003-20210506085836909200000004",
              "role_NodePolicy": "testcognito20210506085834656400000003-20210506085837485400000007"
            },
            "outputs": {
              "aws_auth": "kube-system/aws-auth",
              "cluster_name": "testcognito",
              "role_CNI_Policy": "testcognito20210506085834656400000003-20210506085837455200000006",
              "role_Container": "testcognito20210506085834656400000003-20210506085836909200000004",
              "role_NodePolicy": "testcognito20210506085834656400000003-20210506085837485400000007"
            },
            "random": "5518636061885631585"
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network",
      "mode": "data",
      "type": "template_file",
      "name": "private",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "caca8241fd0ad05f8d906a3621d54ab1dabdb253d82bce72c9944abb30b3f67b",
            "rendered": "10.10.200.0/24",
            "template": "10.10.200.0/24",
            "vars": null
          }
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "381d263fd03ec75f2f2873724cf045b2fca75476c5d28b2430f99264b0769d54",
            "rendered": "10.10.201.0/24",
            "template": "10.10.201.0/24",
            "vars": null
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network",
      "mode": "data",
      "type": "template_file",
      "name": "public",
      "each": "list",
      "provider": "provider.template",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "7815926239d243226af44e7a23ca017a31e2efc7ecd6bdba6b172b54ed7c3c48",
            "rendered": "10.10.0.0/24",
            "template": "10.10.0.0/24",
            "vars": null
          }
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "158c8ebba84718378c7fad168e6f51d24f7ee4ec03a0383f55991f69d10d9bb0",
            "rendered": "10.10.1.0/24",
            "template": "10.10.1.0/24",
            "vars": null
          }
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.acm",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-west-2:641456973426:certificate/b5f5b9d6-683c-4663-bf03-3860137c2568",
            "certificate_authority_arn": "",
            "certificate_body": null,
            "certificate_chain": null,
            "domain_name": "testcognito.sak.ninja",
            "domain_validation_options": [
              {
                "domain_name": "testcognito.sak.ninja",
                "resource_record_name": "_f89d561d40cabc73b378cb1de37d221f.testcognito.sak.ninja.",
                "resource_record_type": "CNAME",
                "resource_record_value": "_64158a5617976680c39970069bfe3b6f.zzxlnyslwt.acm-validations.aws."
              },
              {
                "domain_name": "*.testcognito.sak.ninja",
                "resource_record_name": "_f89d561d40cabc73b378cb1de37d221f.testcognito.sak.ninja.",
                "resource_record_type": "CNAME",
                "resource_record_value": "_64158a5617976680c39970069bfe3b6f.zzxlnyslwt.acm-validations.aws."
              }
            ],
            "id": "arn:aws:acm:us-west-2:641456973426:certificate/b5f5b9d6-683c-4663-bf03-3860137c2568",
            "options": [
              {
                "certificate_transparency_logging_preference": "ENABLED"
              }
            ],
            "private_key": null,
            "status": "PENDING_VALIDATION",
            "subject_alternative_names": [
              "*.testcognito.sak.ninja"
            ],
            "tags": {
              "environment": "testing",
              "project": "Kubeflow"
            },
            "validation_emails": [],
            "validation_method": "DNS"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cognito.module.cognito_acm",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.module.cognito.provider.aws.cognito",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-1:641456973426:certificate/c412a6d9-3f59-45ca-9263-2fecb9ba8078",
            "certificate_authority_arn": "",
            "certificate_body": null,
            "certificate_chain": null,
            "domain_name": "auth.testcognito.sak.ninja",
            "domain_validation_options": [
              {
                "domain_name": "auth.testcognito.sak.ninja",
                "resource_record_name": "_2d8f19f5155ac6f177a72036596f7e70.auth.testcognito.sak.ninja.",
                "resource_record_type": "CNAME",
                "resource_record_value": "_ccf5954a2c270fb24a98e5adeb2f6e5f.zzxlnyslwt.acm-validations.aws."
              }
            ],
            "id": "arn:aws:acm:us-east-1:641456973426:certificate/c412a6d9-3f59-45ca-9263-2fecb9ba8078",
            "options": [
              {
                "certificate_transparency_logging_preference": "ENABLED"
              }
            ],
            "private_key": null,
            "status": "PENDING_VALIDATION",
            "subject_alternative_names": [],
            "tags": {
              "environment": "testing",
              "project": "Kubeflow"
            },
            "validation_emails": [],
            "validation_method": "DNS"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.acm",
      "mode": "managed",
      "type": "aws_acm_certificate_validation",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificate_arn": "arn:aws:acm:us-west-2:641456973426:certificate/b5f5b9d6-683c-4663-bf03-3860137c2568",
            "id": "2021-05-06 08:59:01 +0000 UTC",
            "timeouts": null,
            "validation_record_fqdns": [
              "_f89d561d40cabc73b378cb1de37d221f.testcognito.sak.ninja"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.sak_kubeflow.module.acm.aws_acm_certificate.this",
            "module.sak_kubeflow.module.acm.aws_route53_record.validation",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cognito.module.cognito_acm",
      "mode": "managed",
      "type": "aws_acm_certificate_validation",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.module.cognito.provider.aws.cognito",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificate_arn": "arn:aws:acm:us-east-1:641456973426:certificate/c412a6d9-3f59-45ca-9263-2fecb9ba8078",
            "id": "2021-05-06 09:10:20 +0000 UTC",
            "timeouts": null,
            "validation_record_fqdns": [
              "_2d8f19f5155ac6f177a72036596f7e70.auth.testcognito.sak.ninja"
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_acm_certificate.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_route53_record.validation",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_autoscaling_group",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:us-west-2:641456973426:autoScalingGroup:209428e5-3731-43bb-aaa1-ea7d1ab2a380:autoScalingGroupName/testcognito-020210506085901495800000018",
            "availability_zones": [
              "us-west-2a"
            ],
            "default_cooldown": 300,
            "desired_capacity": 1,
            "enabled_metrics": null,
            "force_delete": false,
            "health_check_grace_period": 300,
            "health_check_type": "EC2",
            "id": "testcognito-020210506085901495800000018",
            "initial_lifecycle_hook": [],
            "launch_configuration": "",
            "launch_template": [],
            "load_balancers": [],
            "max_instance_lifetime": 0,
            "max_size": 5,
            "metrics_granularity": "1Minute",
            "min_elb_capacity": null,
            "min_size": 1,
            "mixed_instances_policy": [
              {
                "instances_distribution": [
                  {
                    "on_demand_allocation_strategy": "prioritized",
                    "on_demand_base_capacity": 0,
                    "on_demand_percentage_above_base_capacity": 0,
                    "spot_allocation_strategy": "lowest-price",
                    "spot_instance_pools": 10,
                    "spot_max_price": ""
                  }
                ],
                "launch_template": [
                  {
                    "launch_template_specification": [
                      {
                        "launch_template_id": "lt-0cf1cba25b049a0bf",
                        "launch_template_name": "testcognito-020210506085858104300000016",
                        "version": "$Latest"
                      }
                    ],
                    "override": [
                      {
                        "instance_type": "m5.large",
                        "weighted_capacity": ""
                      },
                      {
                        "instance_type": "m5.xlarge",
                        "weighted_capacity": ""
                      },
                      {
                        "instance_type": "m5.2xlarge",
                        "weighted_capacity": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "name": "testcognito-020210506085901495800000018",
            "name_prefix": "testcognito-0",
            "placement_group": "",
            "protect_from_scale_in": false,
            "service_linked_role_arn": "arn:aws:iam::641456973426:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
            "suspended_processes": [
              "AZRebalance"
            ],
            "tag": [],
            "tags": [
              {
                "key": "Environment",
                "propagate_at_launch": "true",
                "value": "testing"
              },
              {
                "key": "Name",
                "propagate_at_launch": "true",
                "value": "testcognito-0-eks_asg"
              },
              {
                "key": "Project",
                "propagate_at_launch": "true",
                "value": "Kubeflow"
              },
              {
                "key": "k8s.io/cluster-autoscaler/enabled",
                "propagate_at_launch": "false",
                "value": "true"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/label/node-type",
                "propagate_at_launch": "false",
                "value": "common"
              },
              {
                "key": "k8s.io/cluster-autoscaler/testcognito",
                "propagate_at_launch": "false",
                "value": "owned"
              },
              {
                "key": "kubernetes.io/cluster/testcognito",
                "propagate_at_launch": "true",
                "value": "owned"
              }
            ],
            "target_group_arns": [],
            "termination_policies": [],
            "timeouts": null,
            "vpc_zone_identifier": [
              "subnet-0abea3994a93cbc27"
            ],
            "wait_for_capacity_timeout": "10m",
            "wait_for_elb_capacity": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:us-west-2:641456973426:autoScalingGroup:dcdfca37-1914-4ec7-bea8-240ad074b6ff:autoScalingGroupName/testcognito-120210506085901496400000019",
            "availability_zones": [
              "us-west-2b"
            ],
            "default_cooldown": 300,
            "desired_capacity": 1,
            "enabled_metrics": null,
            "force_delete": false,
            "health_check_grace_period": 300,
            "health_check_type": "EC2",
            "id": "testcognito-120210506085901496400000019",
            "initial_lifecycle_hook": [],
            "launch_configuration": "",
            "launch_template": [],
            "load_balancers": [],
            "max_instance_lifetime": 0,
            "max_size": 5,
            "metrics_granularity": "1Minute",
            "min_elb_capacity": null,
            "min_size": 1,
            "mixed_instances_policy": [
              {
                "instances_distribution": [
                  {
                    "on_demand_allocation_strategy": "prioritized",
                    "on_demand_base_capacity": 0,
                    "on_demand_percentage_above_base_capacity": 0,
                    "spot_allocation_strategy": "lowest-price",
                    "spot_instance_pools": 10,
                    "spot_max_price": ""
                  }
                ],
                "launch_template": [
                  {
                    "launch_template_specification": [
                      {
                        "launch_template_id": "lt-0226432dd2a263910",
                        "launch_template_name": "testcognito-120210506085855675700000014",
                        "version": "$Latest"
                      }
                    ],
                    "override": [
                      {
                        "instance_type": "m5.large",
                        "weighted_capacity": ""
                      },
                      {
                        "instance_type": "m5.xlarge",
                        "weighted_capacity": ""
                      },
                      {
                        "instance_type": "m5.2xlarge",
                        "weighted_capacity": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "name": "testcognito-120210506085901496400000019",
            "name_prefix": "testcognito-1",
            "placement_group": "",
            "protect_from_scale_in": false,
            "service_linked_role_arn": "arn:aws:iam::641456973426:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
            "suspended_processes": [
              "AZRebalance"
            ],
            "tag": [],
            "tags": [
              {
                "key": "Environment",
                "propagate_at_launch": "true",
                "value": "testing"
              },
              {
                "key": "Name",
                "propagate_at_launch": "true",
                "value": "testcognito-1-eks_asg"
              },
              {
                "key": "Project",
                "propagate_at_launch": "true",
                "value": "Kubeflow"
              },
              {
                "key": "k8s.io/cluster-autoscaler/enabled",
                "propagate_at_launch": "false",
                "value": "true"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/label/node-type",
                "propagate_at_launch": "false",
                "value": "common"
              },
              {
                "key": "k8s.io/cluster-autoscaler/testcognito",
                "propagate_at_launch": "false",
                "value": "owned"
              },
              {
                "key": "kubernetes.io/cluster/testcognito",
                "propagate_at_launch": "true",
                "value": "owned"
              }
            ],
            "target_group_arns": [],
            "termination_policies": [],
            "timeouts": null,
            "vpc_zone_identifier": [
              "subnet-0fec41c314798d8cc"
            ],
            "wait_for_capacity_timeout": "10m",
            "wait_for_elb_capacity": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:us-west-2:641456973426:autoScalingGroup:e3c6eb12-b80e-455c-b872-83967d0ae901:autoScalingGroupName/testcognito-22021050608590149770000001a",
            "availability_zones": [
              "us-west-2a",
              "us-west-2b"
            ],
            "default_cooldown": 300,
            "desired_capacity": 0,
            "enabled_metrics": null,
            "force_delete": false,
            "health_check_grace_period": 300,
            "health_check_type": "EC2",
            "id": "testcognito-22021050608590149770000001a",
            "initial_lifecycle_hook": [],
            "launch_configuration": "",
            "launch_template": [],
            "load_balancers": [],
            "max_instance_lifetime": 0,
            "max_size": 2,
            "metrics_granularity": "1Minute",
            "min_elb_capacity": null,
            "min_size": 0,
            "mixed_instances_policy": [
              {
                "instances_distribution": [
                  {
                    "on_demand_allocation_strategy": "prioritized",
                    "on_demand_base_capacity": 0,
                    "on_demand_percentage_above_base_capacity": 0,
                    "spot_allocation_strategy": "lowest-price",
                    "spot_instance_pools": 10,
                    "spot_max_price": ""
                  }
                ],
                "launch_template": [
                  {
                    "launch_template_specification": [
                      {
                        "launch_template_id": "lt-01ddc7decb3c025bf",
                        "launch_template_name": "testcognito-220210506085855140900000012",
                        "version": "$Latest"
                      }
                    ],
                    "override": [
                      {
                        "instance_type": "c5.xlarge",
                        "weighted_capacity": ""
                      },
                      {
                        "instance_type": "c5.2xlarge",
                        "weighted_capacity": ""
                      },
                      {
                        "instance_type": "c5n.xlarge",
                        "weighted_capacity": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "name": "testcognito-22021050608590149770000001a",
            "name_prefix": "testcognito-2",
            "placement_group": "",
            "protect_from_scale_in": false,
            "service_linked_role_arn": "arn:aws:iam::641456973426:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
            "suspended_processes": [
              "AZRebalance"
            ],
            "tag": [],
            "tags": [
              {
                "key": "Environment",
                "propagate_at_launch": "true",
                "value": "testing"
              },
              {
                "key": "Name",
                "propagate_at_launch": "true",
                "value": "testcognito-2-eks_asg"
              },
              {
                "key": "Project",
                "propagate_at_launch": "true",
                "value": "Kubeflow"
              },
              {
                "key": "k8s.io/cluster-autoscaler/enabled",
                "propagate_at_launch": "false",
                "value": "true"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/label/node-type",
                "propagate_at_launch": "false",
                "value": "cpu"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/taint/node-type",
                "propagate_at_launch": "false",
                "value": "cpu:NoSchedule"
              },
              {
                "key": "k8s.io/cluster-autoscaler/testcognito",
                "propagate_at_launch": "false",
                "value": "owned"
              },
              {
                "key": "kubernetes.io/cluster/testcognito",
                "propagate_at_launch": "true",
                "value": "owned"
              }
            ],
            "target_group_arns": [],
            "termination_policies": [],
            "timeouts": null,
            "vpc_zone_identifier": [
              "subnet-0abea3994a93cbc27",
              "subnet-0fec41c314798d8cc"
            ],
            "wait_for_capacity_timeout": "10m",
            "wait_for_elb_capacity": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:autoscaling:us-west-2:641456973426:autoScalingGroup:3ba4feb2-02d8-413d-b0b0-71e211428b86:autoScalingGroupName/testcognito-32021050608590150250000001b",
            "availability_zones": [
              "us-west-2a",
              "us-west-2b"
            ],
            "default_cooldown": 300,
            "desired_capacity": 0,
            "enabled_metrics": null,
            "force_delete": false,
            "health_check_grace_period": 300,
            "health_check_type": "EC2",
            "id": "testcognito-32021050608590150250000001b",
            "initial_lifecycle_hook": [],
            "launch_configuration": "",
            "launch_template": [],
            "load_balancers": [],
            "max_instance_lifetime": 0,
            "max_size": 2,
            "metrics_granularity": "1Minute",
            "min_elb_capacity": null,
            "min_size": 0,
            "mixed_instances_policy": [
              {
                "instances_distribution": [
                  {
                    "on_demand_allocation_strategy": "prioritized",
                    "on_demand_base_capacity": 0,
                    "on_demand_percentage_above_base_capacity": 0,
                    "spot_allocation_strategy": "lowest-price",
                    "spot_instance_pools": 10,
                    "spot_max_price": ""
                  }
                ],
                "launch_template": [
                  {
                    "launch_template_specification": [
                      {
                        "launch_template_id": "lt-0d9d6f0fa38c058b4",
                        "launch_template_name": "testcognito-320210506085854802800000010",
                        "version": "$Latest"
                      }
                    ],
                    "override": [
                      {
                        "instance_type": "p2.xlarge",
                        "weighted_capacity": ""
                      },
                      {
                        "instance_type": "g4dn.xlarge",
                        "weighted_capacity": ""
                      },
                      {
                        "instance_type": "p3.2xlarge",
                        "weighted_capacity": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "name": "testcognito-32021050608590150250000001b",
            "name_prefix": "testcognito-3",
            "placement_group": "",
            "protect_from_scale_in": false,
            "service_linked_role_arn": "arn:aws:iam::641456973426:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling",
            "suspended_processes": [
              "AZRebalance"
            ],
            "tag": [],
            "tags": [
              {
                "key": "Environment",
                "propagate_at_launch": "true",
                "value": "testing"
              },
              {
                "key": "Name",
                "propagate_at_launch": "true",
                "value": "testcognito-3-eks_asg"
              },
              {
                "key": "Project",
                "propagate_at_launch": "true",
                "value": "Kubeflow"
              },
              {
                "key": "k8s.io/cluster-autoscaler/enabled",
                "propagate_at_launch": "false",
                "value": "true"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/label/node-type",
                "propagate_at_launch": "false",
                "value": "gpu"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/label/nvidia.com/gpu",
                "propagate_at_launch": "false",
                "value": "gpu"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/resources/nvidia.com/gpu",
                "propagate_at_launch": "false",
                "value": "1"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/taint/node-type",
                "propagate_at_launch": "false",
                "value": "gpu:NoSchedule"
              },
              {
                "key": "k8s.io/cluster-autoscaler/node-template/taint/nvidia.com/gpu",
                "propagate_at_launch": "false",
                "value": "gpu:NoSchedule"
              },
              {
                "key": "k8s.io/cluster-autoscaler/testcognito",
                "propagate_at_launch": "false",
                "value": "owned"
              },
              {
                "key": "kubernetes.io/cluster/testcognito",
                "propagate_at_launch": "true",
                "value": "owned"
              }
            ],
            "target_group_arns": [],
            "termination_policies": [],
            "timeouts": null,
            "vpc_zone_identifier": [
              "subnet-0abea3994a93cbc27",
              "subnet-0fec41c314798d8cc"
            ],
            "wait_for_capacity_timeout": "10m",
            "wait_for_elb_capacity": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "flow_log",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow",
      "mode": "managed",
      "type": "aws_cognito_user_group",
      "name": "this",
      "each": "map",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": "administrators",
          "schema_version": 0,
          "attributes": {
            "description": "",
            "id": "us-west-2_MEY2tGhva/administrators",
            "name": "administrators",
            "precedence": 0,
            "role_arn": "",
            "user_pool_id": "us-west-2_MEY2tGhva"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "admin_create_user_config": [
              {
                "allow_admin_create_user_only": false,
                "invite_message_template": [
                  {
                    "email_message": "Your SAK Kubeflow username is {username} and temporary password is {####}.\nPlease follow the URL to access Kubeflow: https://kubeflow.testcognito.sak.ninja\n",
                    "email_subject": "Your SAK Kubeflow temporary password",
                    "sms_message": "Your SAK Kubeflow username is {username} and temporary password is {####}"
                  }
                ],
                "unused_account_validity_days": 7
              }
            ],
            "alias_attributes": null,
            "arn": "arn:aws:cognito-idp:us-west-2:641456973426:userpool/us-west-2_MEY2tGhva",
            "auto_verified_attributes": [],
            "creation_date": "2021-05-06T08:18:39Z",
            "device_configuration": [],
            "email_configuration": [
              {
                "email_sending_account": "COGNITO_DEFAULT",
                "from_email_address": "",
                "reply_to_email_address": "",
                "source_arn": ""
              }
            ],
            "email_verification_message": null,
            "email_verification_subject": null,
            "endpoint": "cognito-idp.us-west-2.amazonaws.com/us-west-2_MEY2tGhva",
            "id": "us-west-2_MEY2tGhva",
            "lambda_config": [],
            "last_modified_date": "2021-05-06T08:18:39Z",
            "mfa_configuration": "OFF",
            "name": "testcognito",
            "password_policy": [
              {
                "minimum_length": 8,
                "require_lowercase": true,
                "require_numbers": true,
                "require_symbols": true,
                "require_uppercase": true,
                "temporary_password_validity_days": 7
              }
            ],
            "schema": [],
            "sms_authentication_message": null,
            "sms_configuration": [],
            "sms_verification_message": null,
            "software_token_mfa_configuration": [],
            "tags": {},
            "user_pool_add_ons": [],
            "username_attributes": null,
            "username_configuration": [],
            "verification_message_template": [
              {
                "default_email_option": "CONFIRM_WITH_CODE",
                "email_message": "",
                "email_message_by_link": "",
                "email_subject": "",
                "email_subject_by_link": "",
                "sms_message": ""
              }
            ]
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow",
      "mode": "managed",
      "type": "aws_cognito_user_pool_client",
      "name": "argocd",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_oauth_flows": [
              "code"
            ],
            "allowed_oauth_flows_user_pool_client": true,
            "allowed_oauth_scopes": [
              "email",
              "openid",
              "profile"
            ],
            "analytics_configuration": [],
            "callback_urls": [
              "https://argocd.testcognito.sak.ninja/auth/callback"
            ],
            "client_secret": "f9scuulj3ar1hnopo6luqvtcautl927s3po0onsip70k67cvapg",
            "default_redirect_uri": "",
            "explicit_auth_flows": null,
            "generate_secret": true,
            "id": "6tfh6f4s6uet61vikn989qbo1h",
            "logout_urls": null,
            "name": "argocd",
            "prevent_user_existence_errors": "",
            "read_attributes": null,
            "refresh_token_validity": 30,
            "supported_identity_providers": [
              "COGNITO"
            ],
            "user_pool_id": "us-west-2_MEY2tGhva",
            "write_attributes": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow",
      "mode": "managed",
      "type": "aws_cognito_user_pool_client",
      "name": "kubeflow",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_oauth_flows": [
              "code"
            ],
            "allowed_oauth_flows_user_pool_client": true,
            "allowed_oauth_scopes": [
              "aws.cognito.signin.user.admin",
              "email",
              "openid",
              "profile"
            ],
            "analytics_configuration": [],
            "callback_urls": [
              "https://kubeflow.testcognito.sak.ninja/oauth2/idpresponse"
            ],
            "client_secret": "i2n9oaf9ad8ka0rgb65jf4l0j67ru08lt23562k3l4jmlh3pps8",
            "default_redirect_uri": "",
            "explicit_auth_flows": null,
            "generate_secret": true,
            "id": "4v4kdpto2km0l318t970o3f7km",
            "logout_urls": null,
            "name": "kubeflow",
            "prevent_user_existence_errors": "",
            "read_attributes": null,
            "refresh_token_validity": 30,
            "supported_identity_providers": [
              "COGNITO"
            ],
            "user_pool_id": "us-west-2_MEY2tGhva",
            "write_attributes": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cognito",
      "mode": "managed",
      "type": "aws_cognito_user_pool_domain",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aws_account_id": "641456973426",
            "certificate_arn": "arn:aws:acm:us-east-1:641456973426:certificate/c412a6d9-3f59-45ca-9263-2fecb9ba8078",
            "cloudfront_distribution_arn": "d12acob4ugn5vr.cloudfront.net",
            "domain": "auth.testcognito.sak.ninja",
            "id": "auth.testcognito.sak.ninja",
            "s3_bucket": "aws-cognito-prod-pdx-assets",
            "user_pool_id": "us-west-2_MEY2tGhva",
            "version": "20210506091026"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_acm_certificate.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_acm_certificate_validation.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_route53_record.validation",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_customer_gateway",
      "name": "this",
      "each": "map",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_db_subnet_group",
      "name": "database",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_default_vpc",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_egress_only_internet_gateway",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": null,
            "associate_with_private_ip": null,
            "association_id": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-00a1491d47a8a5376",
            "instance": "",
            "network_interface": "",
            "private_dns": null,
            "private_ip": "",
            "public_dns": "ec2-44-236-31-45.us-west-2.compute.amazonaws.com",
            "public_ip": "44.236.31.45",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito",
              "Project": "Kubeflow",
              "Terraform": "true"
            },
            "timeouts": null,
            "vpc": true
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:641456973426:cluster/testcognito",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOakE0TVRRME1Gb1hEVE14TURVd05EQTRNVFEwTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWFNCjRFS3dldDExLzNKOTg1eldtRHpYTExJaW9wcXllbGxBeThoTWR6eXIwRC8xZ0YrQmFPYjZDdE9vRDNWd0NCZlEKdzZ1NmlqSHNqVWx2QlBZS3NZYzdzbUloUm9vbUsrNEtKOEl1YjVGRllpY3FaL2FxWjdteXFtWlJScGJuTUdzYwp5cGJOWGQrOHd0UXJXK0NLdUlBa2I5UDZUT2xTNnNZNW0vSjh0QnRIUUh5T01CeDNCbzRqVjBNcHpraEQzM0x4CnIzV3ZxWHRYYXhQcVZSaGNCZ1BtL2JDNWZFRSs4c0pIbHUwTkMwb2RFZHQzQXVuYnErTm53UDljblV5MzlLU20KUC9qSVRKaFJUVlB3Y2R6Ris4Mk56NmJ2N3ZnT0FBdlNsaE5kc2Zra0dGNGlWaWhrWmxYQzJybzJhZWkyWWFtUgpIbEp2b3A1OExZYTg0eENwUi9NQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHS3dSeHEzUEQrRHljdmdWeTdkZDhJLy9yUFEKWTRiYVpnUnNCdFlFS1QxSG9QaTFteEpYcXJ6dGxaN1dVS2NHQkxoTHl3QUdCZE51KzBVT1JEUDRpRTNGOVhTOAo5WDliRGNoZU1sbnhSc3FINXZJTE80SjJKL3ZrYzFzdEFJa0Fwc0krN0g4Q3RpZHF3NXk1eENoUi9IWGY2U1ByCmpRWkFreUxDMkV4M0ZrMXB2cXlWSXpOZjNzV3V2Q2FxUTVCa0ZpT0R1cTVKOUJGaFVWSjBHNTFkZFNrbndaSnoKMDZPTnFQYUhiSTdwVjBoNjhxNWl1QjJPZGppa3BnaU41Vkg5RUNLU3NwYWw3dXRpd2FlU3JPeXA5R0w4NEZ3ZwozZ0Y3bzBSV3Y4TkRDVjB3NytqYy9ITlpiSEg2UDdPc0k4MXJVYzR3SXF4cXlpTldONFdqSWk1djRTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
              }
            ],
            "created_at": "2021-05-06 08:08:17 +0000 UTC",
            "enabled_cluster_log_types": [],
            "encryption_config": [],
            "endpoint": "https://0FC308064829AA5344C9F0A1D888965B.gr7.us-west-2.eks.amazonaws.com",
            "id": "testcognito",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
                  }
                ]
              }
            ],
            "name": "testcognito",
            "platform_version": "eks.8",
            "role_arn": "arn:aws:iam::641456973426:role/testcognito20210506080753953600000002",
            "status": "ACTIVE",
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "timeouts": {
              "create": "30m",
              "delete": "15m",
              "update": null
            },
            "version": "1.16",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-09d5b45c982d929c4",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0303636fd233210b2"
                ],
                "subnet_ids": [
                  "subnet-0abea3994a93cbc27",
                  "subnet-0fec41c314798d8cc"
                ],
                "vpc_id": "vpc-0503cb09e8aad6d2f"
              }
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "workers",
      "each": "map",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_elasticache_subnet_group",
      "name": "elasticache",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_flow_log",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_instance_profile",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:instance-profile/testcognito2021050608585200300000000d",
            "create_date": "2021-05-06T08:58:52Z",
            "id": "testcognito2021050608585200300000000d",
            "name": "testcognito2021050608585200300000000d",
            "name_prefix": "testcognito",
            "path": "/",
            "role": "testcognito20210506085834656400000003",
            "roles": [],
            "unique_id": "AIPAZKWOQUZZEVFEQJ4P6"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:instance-profile/testcognito2021050608585281530000000f",
            "create_date": "2021-05-06T08:58:53Z",
            "id": "testcognito2021050608585281530000000f",
            "name": "testcognito2021050608585281530000000f",
            "name_prefix": "testcognito",
            "path": "/",
            "role": "testcognito20210506085834656400000003",
            "roles": [],
            "unique_id": "AIPAZKWOQUZZGE5BTC6ZF"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:instance-profile/testcognito2021050608585068330000000c",
            "create_date": "2021-05-06T08:58:51Z",
            "id": "testcognito2021050608585068330000000c",
            "name": "testcognito2021050608585068330000000c",
            "name_prefix": "testcognito",
            "path": "/",
            "role": "testcognito20210506085834656400000003",
            "roles": [],
            "unique_id": "AIPAZKWOQUZZEYKRHRLA7"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:instance-profile/testcognito2021050608585207050000000e",
            "create_date": "2021-05-06T08:58:52Z",
            "id": "testcognito2021050608585207050000000e",
            "name": "testcognito2021050608585207050000000e",
            "name_prefix": "testcognito",
            "path": "/",
            "role": "testcognito20210506085834656400000003",
            "roles": [],
            "unique_id": "AIPAZKWOQUZZGVNKTFPH3"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B",
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_autoscaler",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:policy/cluster-autoscaler2021050608595172270000001e",
            "description": "EKS cluster-autoscaler policy for cluster testcognito",
            "id": "arn:aws:iam::641456973426:policy/cluster-autoscaler2021050608595172270000001e",
            "name": "cluster-autoscaler2021050608595172270000001e",
            "name_prefix": "cluster-autoscaler",
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"clusterAutoscalerAll\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DescribeLaunchTemplateVersions\",\n        \"autoscaling:DescribeTags\",\n        \"autoscaling:DescribeLaunchConfigurations\",\n        \"autoscaling:DescribeAutoScalingInstances\",\n        \"autoscaling:DescribeAutoScalingGroups\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Sid\": \"clusterAutoscalerOwn\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"autoscaling:UpdateAutoScalingGroup\",\n        \"autoscaling:TerminateInstanceInAutoScalingGroup\",\n        \"autoscaling:SetDesiredCapacity\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled\": \"true\",\n          \"autoscaling:ResourceTag/kubernetes.io/cluster/testcognito\": \"owned\"\n        }\n      }\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:policy/testcognito-cert-manager-2021050608595172110000001c",
            "description": "EKS cert-manager policy for cluster testcognito",
            "id": "arn:aws:iam::641456973426:policy/testcognito-cert-manager-2021050608595172110000001c",
            "name": "testcognito-cert-manager-2021050608595172110000001c",
            "name_prefix": "testcognito-cert-manager-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"route53:GetChange\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:route53:::change/*\"},{\"Action\":[\"route53:ChangeResourceRecordSets\",\"route53:ListResourceRecordSets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:route53:::hostedzone/Z01457893DJ395M5SVB3I\"},{\"Action\":[\"route53:ListHostedZonesByName\",\"route53:ListHostedZones\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:policy/testcognito-external-dns-20210506085834647700000002",
            "description": "EKS external-dns policy for cluster testcognito",
            "id": "arn:aws:iam::641456973426:policy/testcognito-external-dns-20210506085834647700000002",
            "name": "testcognito-external-dns-20210506085834647700000002",
            "name_prefix": "testcognito-external-dns-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"route53:GetChange\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:route53:::change/*\"},{\"Action\":[\"route53:ChangeResourceRecordSets\",\"route53:ListResourceRecordSets\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:route53:::hostedzone/Z01457893DJ395M5SVB3I\"]},{\"Action\":[\"route53:ListHostedZonesByName\",\"route53:ListHostedZones\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:policy/aws-alb-ingress-controller2021050608595172260000001d",
            "description": "EKS aws-alb-ingress-controller policy for cluster testcognito",
            "id": "arn:aws:iam::641456973426:policy/aws-alb-ingress-controller2021050608595172260000001d",
            "name": "aws-alb-ingress-controller2021050608595172260000001d",
            "name_prefix": "aws-alb-ingress-controller",
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf:GetWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"tag:TagResources\",\n        \"tag:GetResources\",\n        \"shield:ListProtections\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeSubscription\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"iam:CreateServiceLinkedRole\",\n        \"elasticloadbalancing:SetWebACL\",\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"elasticloadbalancing:DeregisterTargets\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteLoadBalancer\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateLoadBalancer\",\n        \"elasticloadbalancing:CreateListener\",\n        \"elasticloadbalancing:AddTags\",\n        \"elasticloadbalancing:AddListenerCertificates\",\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:ModifyNetworkInterfaceAttribute\",\n        \"ec2:ModifyInstanceAttribute\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeInstanceStatus\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\",\n        \"ec2:DeleteTags\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:CreateTags\",\n        \"ec2:CreateSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:GetCertificate\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:policy/argocd20210506085844218600000009",
            "description": "EKS ArgoCD policy for cluster testcognito",
            "id": "arn:aws:iam::641456973426:policy/argocd20210506085844218600000009",
            "name": "argocd20210506085844218600000009",
            "name_prefix": "argocd",
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"ArgoCDOwn\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:Decrypt\",\n      \"Resource\": \"arn:aws:kms:us-west-2:641456973426:key/641787b0-0b2b-4e8d-98c6-038f9f0322fd\"\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.aws_kms_key.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "vpc_flow_log_cloudwatch",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "cluster",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:role/testcognito20210506080753953600000002",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSClusterAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-05-06T08:07:54Z",
            "description": "",
            "force_detach_policies": true,
            "id": "testcognito20210506080753953600000002",
            "max_session_duration": 3600,
            "name": "testcognito20210506080753953600000002",
            "name_prefix": "testcognito",
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "unique_id": "AROAZKWOQUZZOCEDUZY34"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:role/testcognito_argocd",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\":\"system:serviceaccount:argocd:argocd\"}}}]}",
            "create_date": "2021-05-06T08:58:43Z",
            "description": "",
            "force_detach_policies": false,
            "id": "testcognito_argocd",
            "max_session_duration": 3600,
            "name": "testcognito_argocd",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "unique_id": "AROAZKWOQUZZKPH3OT2UQ"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:role/testcognito_cert-manager",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\":\"system:serviceaccount:cert-manager:cert-manager\"}}}]}",
            "create_date": "2021-05-06T08:59:52Z",
            "description": "",
            "force_detach_policies": false,
            "id": "testcognito_cert-manager",
            "max_session_duration": 3600,
            "name": "testcognito_cert-manager",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "unique_id": "AROAZKWOQUZZL3D5GEIQF"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.cert_manager.kubernetes_namespace.this",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:role/testcognito_external-dns",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\":\"system:serviceaccount:kube-system:external-dns\"}}}]}",
            "create_date": "2021-05-06T08:58:35Z",
            "description": "",
            "force_detach_policies": false,
            "id": "testcognito_external-dns",
            "max_session_duration": 3600,
            "name": "testcognito_external-dns",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "unique_id": "AROAZKWOQUZZGAQRGH4DP"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:role/testcognito_cluster-autoscaler",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\":\"system:serviceaccount:kube-system:aws-cluster-autoscaler-chart\"}}}]}",
            "create_date": "2021-05-06T08:58:42Z",
            "description": "",
            "force_detach_policies": false,
            "id": "testcognito_cluster-autoscaler",
            "max_session_duration": 3600,
            "name": "testcognito_cluster-autoscaler",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "unique_id": "AROAZKWOQUZZJRGCEULIN"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:role/testcognito_aws-alb-ingress-controller",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::641456973426:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/0FC308064829AA5344C9F0A1D888965B:sub\":\"system:serviceaccount:ingress-system:aws-alb-ingress-controller\"}}}]}",
            "create_date": "2021-05-06T08:59:52Z",
            "description": "",
            "force_detach_policies": false,
            "id": "testcognito_aws-alb-ingress-controller",
            "max_session_duration": 3600,
            "name": "testcognito_aws-alb-ingress-controller",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": "",
            "tags": null,
            "unique_id": "AROAZKWOQUZZG6ZYS7ZRU"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.alb_ingress.kubernetes_namespace.this",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "vpc_flow_log_cloudwatch",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "workers",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::641456973426:role/testcognito20210506085834656400000003",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"EKSWorkerAssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2021-05-06T08:58:35Z",
            "description": "",
            "force_detach_policies": true,
            "id": "testcognito20210506085834656400000003",
            "max_session_duration": 3600,
            "name": "testcognito20210506085834656400000003",
            "name_prefix": "testcognito",
            "path": "/",
            "permissions_boundary": null,
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "unique_id": "AROAZKWOQUZZOWBOG6TH6"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSClusterPolicy",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito20210506080753953600000002-20210506080756081600000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "testcognito20210506080753953600000002"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_AmazonEKSServicePolicy",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito20210506080753953600000002-20210506080756065700000003",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSServicePolicy",
            "role": "testcognito20210506080753953600000002"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito_argocd-2021050608584743830000000b",
            "policy_arn": "arn:aws:iam::641456973426:policy/argocd20210506085844218600000009",
            "role": "testcognito_argocd"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.aws_iam_policy.this",
            "module.sak_kubeflow.module.argocd.aws_kms_key.this",
            "module.sak_kubeflow.module.argocd.module.iam_assumable_role_admin.aws_iam_role.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito_cert-manager-2021050608595459910000001f",
            "policy_arn": "arn:aws:iam::641456973426:policy/testcognito-cert-manager-2021050608595172110000001c",
            "role": "testcognito_cert-manager"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.cert_manager.aws_iam_policy.this",
            "module.sak_kubeflow.module.cert_manager.kubernetes_namespace.this",
            "module.sak_kubeflow.module.cert_manager.module.iam_assumable_role_admin.aws_iam_role.this",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito_external-dns-2021050608584425720000000a",
            "policy_arn": "arn:aws:iam::641456973426:policy/testcognito-external-dns-20210506085834647700000002",
            "role": "testcognito_external-dns"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.external_dns.aws_iam_policy.this",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public",
            "module.sak_kubeflow.module.external_dns.module.iam_assumable_role_admin.aws_iam_role.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito_cluster-autoscaler-20210506085954628300000021",
            "policy_arn": "arn:aws:iam::641456973426:policy/cluster-autoscaler2021050608595172270000001e",
            "role": "testcognito_cluster-autoscaler"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.cluster_autoscaler.aws_iam_policy.cluster_autoscaler",
            "module.sak_kubeflow.module.cluster_autoscaler.module.iam_assumable_role_admin.aws_iam_role.this",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress.module.iam_assumable_role_admin",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "custom",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito_aws-alb-ingress-controller-20210506085954625200000020",
            "policy_arn": "arn:aws:iam::641456973426:policy/aws-alb-ingress-controller2021050608595172260000001d",
            "role": "testcognito_aws-alb-ingress-controller"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.alb_ingress.aws_iam_policy.this",
            "module.sak_kubeflow.module.alb_ingress.kubernetes_namespace.this",
            "module.sak_kubeflow.module.alb_ingress.module.iam_assumable_role_admin.aws_iam_role.this",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "vpc_flow_log_cloudwatch",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEC2ContainerRegistryReadOnly",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito20210506085834656400000003-20210506085836909200000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "testcognito20210506085834656400000003"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKSWorkerNodePolicy",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito20210506085834656400000003-20210506085837485400000007",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "testcognito20210506085834656400000003"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_AmazonEKS_CNI_Policy",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito20210506085834656400000003-20210506085837455200000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "testcognito20210506085834656400000003"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "workers_additional_policies",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "testcognito20210506085834656400000003-20210506085837447900000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
            "role": "testcognito20210506085834656400000003"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "igw-08e4ac91df1567cdc",
            "owner_id": "641456973426",
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito",
              "Project": "Kubeflow",
              "Terraform": "true"
            },
            "vpc_id": "vpc-0503cb09e8aad6d2f"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "managed",
      "type": "aws_kms_ciphertext",
      "name": "client_secret",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "ciphertext_blob": "AQICAHg5eAZx0iXMSZZlALkTULYDMRXCmEM88YsGYdKnVKxrJwHpBG/Aw9jBd9VqwhYhFtX6AAAAlDCBkQYJKoZIhvcNAQcGoIGDMIGAAgEAMHsGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMZYJT/PwjggQtAjTpAgEQgE6KMO51EgKlL7Vs+VZlMMtIPQ5kl/sM/xFC8ywZ148atu2lC91WPAcbZ8rk+J3K2SWdOLfETQ3q86MeuJHHDrbc81lHq+jCfcXMHDo+D28=",
            "context": null,
            "id": "2021-05-06 08:58:43.375612 +0000 UTC",
            "key_id": "641787b0-0b2b-4e8d-98c6-038f9f0322fd",
            "plaintext": "f9scuulj3ar1hnopo6luqvtcautl927s3po0onsip70k67cvapg"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.aws_cognito_user_pool_client.argocd",
            "module.sak_kubeflow.module.argocd.aws_kms_key.this",
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-west-2:641456973426:key/641787b0-0b2b-4e8d-98c6-038f9f0322fd",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "ArgoCD key",
            "enable_key_rotation": false,
            "id": "641787b0-0b2b-4e8d-98c6-038f9f0322fd",
            "is_enabled": true,
            "key_id": "641787b0-0b2b-4e8d-98c6-038f9f0322fd",
            "key_usage": "ENCRYPT_DECRYPT",
            "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::641456973426:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
            "tags": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_launch_configuration",
      "name": "workers",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_launch_template",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:launch-template/lt-0cf1cba25b049a0bf",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "false",
                    "iops": 0,
                    "kms_key_id": "",
                    "snapshot_id": "",
                    "volume_size": 100,
                    "volume_type": "gp2"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "default_version": 1,
            "description": "",
            "disable_api_termination": false,
            "ebs_optimized": "true",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "hibernation_options": [],
            "iam_instance_profile": [
              {
                "arn": "",
                "name": "testcognito2021050608585200300000000d"
              }
            ],
            "id": "lt-0cf1cba25b049a0bf",
            "image_id": "ami-079f80e97bd446bd3",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_type": "m4.large",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "metadata_options": [],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "testcognito-020210506085858104300000016",
            "name_prefix": "testcognito-0",
            "network_interfaces": [
              {
                "associate_public_ip_address": "false",
                "delete_on_termination": true,
                "description": "",
                "device_index": 0,
                "ipv4_address_count": 0,
                "ipv4_addresses": null,
                "ipv6_address_count": 0,
                "ipv6_addresses": null,
                "network_interface_id": "",
                "private_ip_address": "",
                "security_groups": [
                  "sg-00b2e628e13f04b57"
                ],
                "subnet_id": ""
              }
            ],
            "placement": [],
            "ram_disk_id": "",
            "security_group_names": null,
            "tag_specifications": [
              {
                "resource_type": "volume",
                "tags": {
                  "Environment": "testing",
                  "Name": "testcognito-0-eks_asg",
                  "Project": "Kubeflow"
                }
              },
              {
                "resource_type": "instance",
                "tags": {
                  "Environment": "testing",
                  "Name": "testcognito-0-eks_asg",
                  "Project": "Kubeflow"
                }
              }
            ],
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "user_data": "IyEvYmluL2Jhc2ggLXhlCgojIEFsbG93IHVzZXIgc3VwcGxpZWQgcHJlIHVzZXJkYXRhIGNvZGUKCgojIEJvb3RzdHJhcCBhbmQgam9pbiB0aGUgY2x1c3RlcgovZXRjL2Vrcy9ib290c3RyYXAuc2ggLS1iNjQtY2x1c3Rlci1jYSAnTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTjVSRU5EUVdKRFowRjNTVUpCWjBsQ1FVUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJSRUZXVFZKTmQwVlJXVVJXVVZGRVJYZHdjbVJYU213S1kyMDFiR1JIVm5wTlFqUllSRlJKZUUxRVZYZE9ha0UwVFZSUk1FMUdiMWhFVkUxNFRVUlZkMDVFUVRSTlZGRXdUVVp2ZDBaVVJWUk5Ra1ZIUVRGVlJRcEJlRTFMWVROV2FWcFlTblZhV0ZKc1kzcERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRXRk5DalJGUzNkbGRERXhMek5LT1RnMWVsZHRSSHBZVEV4SmFXOXdjWGxsYkd4QmVUaG9UV1I2ZVhJd1JDOHhaMFlyUW1GUFlqWkRkRTl2UkROV2QwTkNabEVLZHpaMU5tbHFTSE5xVld4MlFsQlpTM05aWXpkemJVbG9VbTl2YlVzck5FdEtPRWwxWWpWR1JsbHBZM0ZhTDJGeFdqZHRlWEZ0V2xKU2NHSnVUVWR6WXdwNWNHSk9XR1FyT0hkMFVYSlhLME5MZFVsQmEySTVVRFpVVDJ4VE5uTlpOVzB2U2poMFFuUklVVWg1VDAxQ2VETkNielJxVmpCTmNIcHJhRVF6TTB4NENuSXpWM1p4V0hSWVlYaFFjVlpTYUdOQ1oxQnRMMkpETldaRlJTczRjMHBJYkhVd1RrTXdiMlJGWkhRelFYVnVZbkVyVG01M1VEbGpibFY1TXpsTFUyMEtVQzlxU1ZSS2FGSlVWbEIzWTJSNlJpczRNazU2Tm1KMk4zWm5UMEZCZGxOc2FFNWtjMlpyYTBkR05HbFdhV2hyV214WVF6SnliekpoWldreVdXRnRVZ3BJYkVwMmIzQTFPRXhaWVRnMGVFTndVaTlOUTBGM1JVRkJZVTFxVFVORmQwUm5XVVJXVWpCUVFWRklMMEpCVVVSQlowdHJUVUU0UjBFeFZXUkZkMFZDQ2k5M1VVWk5RVTFDUVdZNGQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV4Q1VVRkVaMmRGUWtGSFMzZFNlSEV6VUVRclJIbGpkbWRXZVRka1pEaEpMeTl5VUZFS1dUUmlZVnBuVW5OQ2RGbEZTMVF4U0c5UWFURnRlRXBZY1hKNmRHeGFOMWRWUzJOSFFreG9USGwzUVVkQ1pFNTFLekJWVDFKRVVEUnBSVE5HT1ZoVE9BbzVXRGxpUkdOb1pVMXNibmhTYzNGSU5YWkpURTgwU2pKS0wzWnJZekZ6ZEVGSmEwRndjMGtyTjBnNFEzUnBaSEYzTlhrMWVFTm9VaTlJV0dZMlUxQnlDbXBSV2tGcmVVeERNa1Y0TTBack1YQjJjWGxXU1hwT1pqTnpWM1YyUTJGeFVUVkNhMFpwVDBSMWNUVktPVUpHYUZWV1NqQkhOVEZrWkZOcmJuZGFTbm9LTURaUFRuRlFZVWhpU1Rkd1ZqQm9Oamh4TldsMVFqSlBaR3BwYTNCbmFVNDFWa2c1UlVOTFUzTndZV3czZFhScGQyRmxVM0pQZVhBNVIwdzRORVozWndvelowWTNiekJTVjNZNFRrUkRWakIzTnl0cVl5OUlUbHBpU0VnMlVEZFBjMGs0TVhKVll6UjNTWEY0Y1hscFRsZE9ORmRxU1drMWRqUlRWVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89JyAtLWFwaXNlcnZlci1lbmRwb2ludCAnaHR0cHM6Ly8wRkMzMDgwNjQ4MjlBQTUzNDRDOUYwQTFEODg4OTY1Qi5ncjcudXMtd2VzdC0yLmVrcy5hbWF6b25hd3MuY29tJyAgLS1rdWJlbGV0LWV4dHJhLWFyZ3MgIi0tbm9kZS1sYWJlbHM9bm9kZS5rdWJlcm5ldGVzLmlvL2xpZmVjeWNsZT1ub3JtYWwsbm9kZS10eXBlPWNvbW1vbiIgJ3Rlc3Rjb2duaXRvJwoKIyBBbGxvdyB1c2VyIHN1cHBsaWVkIHVzZXJkYXRhIGNvZGUKc3VkbyB5dW0gaW5zdGFsbCAteSBodHRwczovL3MzLmFtYXpvbmF3cy5jb20vZWMyLWRvd25sb2Fkcy13aW5kb3dzL1NTTUFnZW50L2xhdGVzdC9saW51eF9hbWQ2NC9hbWF6b24tc3NtLWFnZW50LnJwbSAmJiBzdWRvIHN5c3RlbWN0bCBlbmFibGUgYW1hem9uLXNzbS1hZ2VudCAmJiBzdWRvIHN5c3RlbWN0bCBzdGFydCBhbWF6b24tc3NtLWFnZW50Cg==",
            "vpc_security_group_ids": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:launch-template/lt-0226432dd2a263910",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "false",
                    "iops": 0,
                    "kms_key_id": "",
                    "snapshot_id": "",
                    "volume_size": 100,
                    "volume_type": "gp2"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "default_version": 1,
            "description": "",
            "disable_api_termination": false,
            "ebs_optimized": "true",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "hibernation_options": [],
            "iam_instance_profile": [
              {
                "arn": "",
                "name": "testcognito2021050608585281530000000f"
              }
            ],
            "id": "lt-0226432dd2a263910",
            "image_id": "ami-079f80e97bd446bd3",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_type": "m4.large",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "metadata_options": [],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "testcognito-120210506085855675700000014",
            "name_prefix": "testcognito-1",
            "network_interfaces": [
              {
                "associate_public_ip_address": "false",
                "delete_on_termination": true,
                "description": "",
                "device_index": 0,
                "ipv4_address_count": 0,
                "ipv4_addresses": null,
                "ipv6_address_count": 0,
                "ipv6_addresses": null,
                "network_interface_id": "",
                "private_ip_address": "",
                "security_groups": [
                  "sg-00b2e628e13f04b57"
                ],
                "subnet_id": ""
              }
            ],
            "placement": [],
            "ram_disk_id": "",
            "security_group_names": null,
            "tag_specifications": [
              {
                "resource_type": "volume",
                "tags": {
                  "Environment": "testing",
                  "Name": "testcognito-1-eks_asg",
                  "Project": "Kubeflow"
                }
              },
              {
                "resource_type": "instance",
                "tags": {
                  "Environment": "testing",
                  "Name": "testcognito-1-eks_asg",
                  "Project": "Kubeflow"
                }
              }
            ],
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "user_data": "IyEvYmluL2Jhc2ggLXhlCgojIEFsbG93IHVzZXIgc3VwcGxpZWQgcHJlIHVzZXJkYXRhIGNvZGUKCgojIEJvb3RzdHJhcCBhbmQgam9pbiB0aGUgY2x1c3RlcgovZXRjL2Vrcy9ib290c3RyYXAuc2ggLS1iNjQtY2x1c3Rlci1jYSAnTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTjVSRU5EUVdKRFowRjNTVUpCWjBsQ1FVUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJSRUZXVFZKTmQwVlJXVVJXVVZGRVJYZHdjbVJYU213S1kyMDFiR1JIVm5wTlFqUllSRlJKZUUxRVZYZE9ha0UwVFZSUk1FMUdiMWhFVkUxNFRVUlZkMDVFUVRSTlZGRXdUVVp2ZDBaVVJWUk5Ra1ZIUVRGVlJRcEJlRTFMWVROV2FWcFlTblZhV0ZKc1kzcERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRXRk5DalJGUzNkbGRERXhMek5LT1RnMWVsZHRSSHBZVEV4SmFXOXdjWGxsYkd4QmVUaG9UV1I2ZVhJd1JDOHhaMFlyUW1GUFlqWkRkRTl2UkROV2QwTkNabEVLZHpaMU5tbHFTSE5xVld4MlFsQlpTM05aWXpkemJVbG9VbTl2YlVzck5FdEtPRWwxWWpWR1JsbHBZM0ZhTDJGeFdqZHRlWEZ0V2xKU2NHSnVUVWR6WXdwNWNHSk9XR1FyT0hkMFVYSlhLME5MZFVsQmEySTVVRFpVVDJ4VE5uTlpOVzB2U2poMFFuUklVVWg1VDAxQ2VETkNielJxVmpCTmNIcHJhRVF6TTB4NENuSXpWM1p4V0hSWVlYaFFjVlpTYUdOQ1oxQnRMMkpETldaRlJTczRjMHBJYkhVd1RrTXdiMlJGWkhRelFYVnVZbkVyVG01M1VEbGpibFY1TXpsTFUyMEtVQzlxU1ZSS2FGSlVWbEIzWTJSNlJpczRNazU2Tm1KMk4zWm5UMEZCZGxOc2FFNWtjMlpyYTBkR05HbFdhV2hyV214WVF6SnliekpoWldreVdXRnRVZ3BJYkVwMmIzQTFPRXhaWVRnMGVFTndVaTlOUTBGM1JVRkJZVTFxVFVORmQwUm5XVVJXVWpCUVFWRklMMEpCVVVSQlowdHJUVUU0UjBFeFZXUkZkMFZDQ2k5M1VVWk5RVTFDUVdZNGQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV4Q1VVRkVaMmRGUWtGSFMzZFNlSEV6VUVRclJIbGpkbWRXZVRka1pEaEpMeTl5VUZFS1dUUmlZVnBuVW5OQ2RGbEZTMVF4U0c5UWFURnRlRXBZY1hKNmRHeGFOMWRWUzJOSFFreG9USGwzUVVkQ1pFNTFLekJWVDFKRVVEUnBSVE5HT1ZoVE9BbzVXRGxpUkdOb1pVMXNibmhTYzNGSU5YWkpURTgwU2pKS0wzWnJZekZ6ZEVGSmEwRndjMGtyTjBnNFEzUnBaSEYzTlhrMWVFTm9VaTlJV0dZMlUxQnlDbXBSV2tGcmVVeERNa1Y0TTBack1YQjJjWGxXU1hwT1pqTnpWM1YyUTJGeFVUVkNhMFpwVDBSMWNUVktPVUpHYUZWV1NqQkhOVEZrWkZOcmJuZGFTbm9LTURaUFRuRlFZVWhpU1Rkd1ZqQm9Oamh4TldsMVFqSlBaR3BwYTNCbmFVNDFWa2c1UlVOTFUzTndZV3czZFhScGQyRmxVM0pQZVhBNVIwdzRORVozWndvelowWTNiekJTVjNZNFRrUkRWakIzTnl0cVl5OUlUbHBpU0VnMlVEZFBjMGs0TVhKVll6UjNTWEY0Y1hscFRsZE9ORmRxU1drMWRqUlRWVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89JyAtLWFwaXNlcnZlci1lbmRwb2ludCAnaHR0cHM6Ly8wRkMzMDgwNjQ4MjlBQTUzNDRDOUYwQTFEODg4OTY1Qi5ncjcudXMtd2VzdC0yLmVrcy5hbWF6b25hd3MuY29tJyAgLS1rdWJlbGV0LWV4dHJhLWFyZ3MgIi0tbm9kZS1sYWJlbHM9bm9kZS5rdWJlcm5ldGVzLmlvL2xpZmVjeWNsZT1ub3JtYWwsbm9kZS10eXBlPWNvbW1vbiIgJ3Rlc3Rjb2duaXRvJwoKIyBBbGxvdyB1c2VyIHN1cHBsaWVkIHVzZXJkYXRhIGNvZGUKc3VkbyB5dW0gaW5zdGFsbCAteSBodHRwczovL3MzLmFtYXpvbmF3cy5jb20vZWMyLWRvd25sb2Fkcy13aW5kb3dzL1NTTUFnZW50L2xhdGVzdC9saW51eF9hbWQ2NC9hbWF6b24tc3NtLWFnZW50LnJwbSAmJiBzdWRvIHN5c3RlbWN0bCBlbmFibGUgYW1hem9uLXNzbS1hZ2VudCAmJiBzdWRvIHN5c3RlbWN0bCBzdGFydCBhbWF6b24tc3NtLWFnZW50Cg==",
            "vpc_security_group_ids": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:launch-template/lt-01ddc7decb3c025bf",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "false",
                    "iops": 0,
                    "kms_key_id": "",
                    "snapshot_id": "",
                    "volume_size": 100,
                    "volume_type": "gp2"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "default_version": 1,
            "description": "",
            "disable_api_termination": false,
            "ebs_optimized": "true",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "hibernation_options": [],
            "iam_instance_profile": [
              {
                "arn": "",
                "name": "testcognito2021050608585068330000000c"
              }
            ],
            "id": "lt-01ddc7decb3c025bf",
            "image_id": "ami-079f80e97bd446bd3",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_type": "m4.large",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "metadata_options": [],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "testcognito-220210506085855140900000012",
            "name_prefix": "testcognito-2",
            "network_interfaces": [
              {
                "associate_public_ip_address": "false",
                "delete_on_termination": true,
                "description": "",
                "device_index": 0,
                "ipv4_address_count": 0,
                "ipv4_addresses": null,
                "ipv6_address_count": 0,
                "ipv6_addresses": null,
                "network_interface_id": "",
                "private_ip_address": "",
                "security_groups": [
                  "sg-00b2e628e13f04b57"
                ],
                "subnet_id": ""
              }
            ],
            "placement": [],
            "ram_disk_id": "",
            "security_group_names": null,
            "tag_specifications": [
              {
                "resource_type": "volume",
                "tags": {
                  "Environment": "testing",
                  "Name": "testcognito-2-eks_asg",
                  "Project": "Kubeflow"
                }
              },
              {
                "resource_type": "instance",
                "tags": {
                  "Environment": "testing",
                  "Name": "testcognito-2-eks_asg",
                  "Project": "Kubeflow"
                }
              }
            ],
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "user_data": "IyEvYmluL2Jhc2ggLXhlCgojIEFsbG93IHVzZXIgc3VwcGxpZWQgcHJlIHVzZXJkYXRhIGNvZGUKCgojIEJvb3RzdHJhcCBhbmQgam9pbiB0aGUgY2x1c3RlcgovZXRjL2Vrcy9ib290c3RyYXAuc2ggLS1iNjQtY2x1c3Rlci1jYSAnTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTjVSRU5EUVdKRFowRjNTVUpCWjBsQ1FVUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJSRUZXVFZKTmQwVlJXVVJXVVZGRVJYZHdjbVJYU213S1kyMDFiR1JIVm5wTlFqUllSRlJKZUUxRVZYZE9ha0UwVFZSUk1FMUdiMWhFVkUxNFRVUlZkMDVFUVRSTlZGRXdUVVp2ZDBaVVJWUk5Ra1ZIUVRGVlJRcEJlRTFMWVROV2FWcFlTblZhV0ZKc1kzcERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRXRk5DalJGUzNkbGRERXhMek5LT1RnMWVsZHRSSHBZVEV4SmFXOXdjWGxsYkd4QmVUaG9UV1I2ZVhJd1JDOHhaMFlyUW1GUFlqWkRkRTl2UkROV2QwTkNabEVLZHpaMU5tbHFTSE5xVld4MlFsQlpTM05aWXpkemJVbG9VbTl2YlVzck5FdEtPRWwxWWpWR1JsbHBZM0ZhTDJGeFdqZHRlWEZ0V2xKU2NHSnVUVWR6WXdwNWNHSk9XR1FyT0hkMFVYSlhLME5MZFVsQmEySTVVRFpVVDJ4VE5uTlpOVzB2U2poMFFuUklVVWg1VDAxQ2VETkNielJxVmpCTmNIcHJhRVF6TTB4NENuSXpWM1p4V0hSWVlYaFFjVlpTYUdOQ1oxQnRMMkpETldaRlJTczRjMHBJYkhVd1RrTXdiMlJGWkhRelFYVnVZbkVyVG01M1VEbGpibFY1TXpsTFUyMEtVQzlxU1ZSS2FGSlVWbEIzWTJSNlJpczRNazU2Tm1KMk4zWm5UMEZCZGxOc2FFNWtjMlpyYTBkR05HbFdhV2hyV214WVF6SnliekpoWldreVdXRnRVZ3BJYkVwMmIzQTFPRXhaWVRnMGVFTndVaTlOUTBGM1JVRkJZVTFxVFVORmQwUm5XVVJXVWpCUVFWRklMMEpCVVVSQlowdHJUVUU0UjBFeFZXUkZkMFZDQ2k5M1VVWk5RVTFDUVdZNGQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV4Q1VVRkVaMmRGUWtGSFMzZFNlSEV6VUVRclJIbGpkbWRXZVRka1pEaEpMeTl5VUZFS1dUUmlZVnBuVW5OQ2RGbEZTMVF4U0c5UWFURnRlRXBZY1hKNmRHeGFOMWRWUzJOSFFreG9USGwzUVVkQ1pFNTFLekJWVDFKRVVEUnBSVE5HT1ZoVE9BbzVXRGxpUkdOb1pVMXNibmhTYzNGSU5YWkpURTgwU2pKS0wzWnJZekZ6ZEVGSmEwRndjMGtyTjBnNFEzUnBaSEYzTlhrMWVFTm9VaTlJV0dZMlUxQnlDbXBSV2tGcmVVeERNa1Y0TTBack1YQjJjWGxXU1hwT1pqTnpWM1YyUTJGeFVUVkNhMFpwVDBSMWNUVktPVUpHYUZWV1NqQkhOVEZrWkZOcmJuZGFTbm9LTURaUFRuRlFZVWhpU1Rkd1ZqQm9Oamh4TldsMVFqSlBaR3BwYTNCbmFVNDFWa2c1UlVOTFUzTndZV3czZFhScGQyRmxVM0pQZVhBNVIwdzRORVozWndvelowWTNiekJTVjNZNFRrUkRWakIzTnl0cVl5OUlUbHBpU0VnMlVEZFBjMGs0TVhKVll6UjNTWEY0Y1hscFRsZE9ORmRxU1drMWRqUlRWVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89JyAtLWFwaXNlcnZlci1lbmRwb2ludCAnaHR0cHM6Ly8wRkMzMDgwNjQ4MjlBQTUzNDRDOUYwQTFEODg4OTY1Qi5ncjcudXMtd2VzdC0yLmVrcy5hbWF6b25hd3MuY29tJyAgLS1rdWJlbGV0LWV4dHJhLWFyZ3MgIi0tbm9kZS1sYWJlbHM9bm9kZS5rdWJlcm5ldGVzLmlvL2xpZmVjeWNsZT1ub3JtYWwsbm9kZS10eXBlPWNwdSAtLXJlZ2lzdGVyLXdpdGgtdGFpbnRzPW5vZGUtdHlwZT1jcHU6Tm9TY2hlZHVsZSIgJ3Rlc3Rjb2duaXRvJwoKIyBBbGxvdyB1c2VyIHN1cHBsaWVkIHVzZXJkYXRhIGNvZGUKc3VkbyB5dW0gaW5zdGFsbCAteSBodHRwczovL3MzLmFtYXpvbmF3cy5jb20vZWMyLWRvd25sb2Fkcy13aW5kb3dzL1NTTUFnZW50L2xhdGVzdC9saW51eF9hbWQ2NC9hbWF6b24tc3NtLWFnZW50LnJwbSAmJiBzdWRvIHN5c3RlbWN0bCBlbmFibGUgYW1hem9uLXNzbS1hZ2VudCAmJiBzdWRvIHN5c3RlbWN0bCBzdGFydCBhbWF6b24tc3NtLWFnZW50Cg==",
            "vpc_security_group_ids": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:launch-template/lt-0d9d6f0fa38c058b4",
            "block_device_mappings": [
              {
                "device_name": "/dev/xvda",
                "ebs": [
                  {
                    "delete_on_termination": "true",
                    "encrypted": "false",
                    "iops": 0,
                    "kms_key_id": "",
                    "snapshot_id": "",
                    "volume_size": 100,
                    "volume_type": "gp2"
                  }
                ],
                "no_device": "",
                "virtual_name": ""
              }
            ],
            "capacity_reservation_specification": [],
            "cpu_options": [],
            "credit_specification": [
              {
                "cpu_credits": "standard"
              }
            ],
            "default_version": 1,
            "description": "",
            "disable_api_termination": false,
            "ebs_optimized": "true",
            "elastic_gpu_specifications": [],
            "elastic_inference_accelerator": [],
            "hibernation_options": [],
            "iam_instance_profile": [
              {
                "arn": "",
                "name": "testcognito2021050608585207050000000e"
              }
            ],
            "id": "lt-0d9d6f0fa38c058b4",
            "image_id": "ami-04e5c76f0f3d5c556",
            "instance_initiated_shutdown_behavior": "",
            "instance_market_options": [],
            "instance_type": "m4.large",
            "kernel_id": "",
            "key_name": "",
            "latest_version": 1,
            "license_specification": [],
            "metadata_options": [],
            "monitoring": [
              {
                "enabled": true
              }
            ],
            "name": "testcognito-320210506085854802800000010",
            "name_prefix": "testcognito-3",
            "network_interfaces": [
              {
                "associate_public_ip_address": "false",
                "delete_on_termination": true,
                "description": "",
                "device_index": 0,
                "ipv4_address_count": 0,
                "ipv4_addresses": null,
                "ipv6_address_count": 0,
                "ipv6_addresses": null,
                "network_interface_id": "",
                "private_ip_address": "",
                "security_groups": [
                  "sg-00b2e628e13f04b57"
                ],
                "subnet_id": ""
              }
            ],
            "placement": [],
            "ram_disk_id": "",
            "security_group_names": null,
            "tag_specifications": [
              {
                "resource_type": "volume",
                "tags": {
                  "Environment": "testing",
                  "Name": "testcognito-3-eks_asg",
                  "Project": "Kubeflow"
                }
              },
              {
                "resource_type": "instance",
                "tags": {
                  "Environment": "testing",
                  "Name": "testcognito-3-eks_asg",
                  "Project": "Kubeflow"
                }
              }
            ],
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "user_data": "IyEvYmluL2Jhc2ggLXhlCgojIEFsbG93IHVzZXIgc3VwcGxpZWQgcHJlIHVzZXJkYXRhIGNvZGUKCgojIEJvb3RzdHJhcCBhbmQgam9pbiB0aGUgY2x1c3RlcgovZXRjL2Vrcy9ib290c3RyYXAuc2ggLS1iNjQtY2x1c3Rlci1jYSAnTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTjVSRU5EUVdKRFowRjNTVUpCWjBsQ1FVUkJUa0puYTNGb2EybEhPWGN3UWtGUmMwWkJSRUZXVFZKTmQwVlJXVVJXVVZGRVJYZHdjbVJYU213S1kyMDFiR1JIVm5wTlFqUllSRlJKZUUxRVZYZE9ha0UwVFZSUk1FMUdiMWhFVkUxNFRVUlZkMDVFUVRSTlZGRXdUVVp2ZDBaVVJWUk5Ra1ZIUVRGVlJRcEJlRTFMWVROV2FWcFlTblZhV0ZKc1kzcERRMEZUU1hkRVVWbEtTMjlhU1doMlkwNUJVVVZDUWxGQlJHZG5SVkJCUkVORFFWRnZRMmRuUlVKQlRXRk5DalJGUzNkbGRERXhMek5LT1RnMWVsZHRSSHBZVEV4SmFXOXdjWGxsYkd4QmVUaG9UV1I2ZVhJd1JDOHhaMFlyUW1GUFlqWkRkRTl2UkROV2QwTkNabEVLZHpaMU5tbHFTSE5xVld4MlFsQlpTM05aWXpkemJVbG9VbTl2YlVzck5FdEtPRWwxWWpWR1JsbHBZM0ZhTDJGeFdqZHRlWEZ0V2xKU2NHSnVUVWR6WXdwNWNHSk9XR1FyT0hkMFVYSlhLME5MZFVsQmEySTVVRFpVVDJ4VE5uTlpOVzB2U2poMFFuUklVVWg1VDAxQ2VETkNielJxVmpCTmNIcHJhRVF6TTB4NENuSXpWM1p4V0hSWVlYaFFjVlpTYUdOQ1oxQnRMMkpETldaRlJTczRjMHBJYkhVd1RrTXdiMlJGWkhRelFYVnVZbkVyVG01M1VEbGpibFY1TXpsTFUyMEtVQzlxU1ZSS2FGSlVWbEIzWTJSNlJpczRNazU2Tm1KMk4zWm5UMEZCZGxOc2FFNWtjMlpyYTBkR05HbFdhV2hyV214WVF6SnliekpoWldreVdXRnRVZ3BJYkVwMmIzQTFPRXhaWVRnMGVFTndVaTlOUTBGM1JVRkJZVTFxVFVORmQwUm5XVVJXVWpCUVFWRklMMEpCVVVSQlowdHJUVUU0UjBFeFZXUkZkMFZDQ2k5M1VVWk5RVTFDUVdZNGQwUlJXVXBMYjFwSmFIWmpUa0ZSUlV4Q1VVRkVaMmRGUWtGSFMzZFNlSEV6VUVRclJIbGpkbWRXZVRka1pEaEpMeTl5VUZFS1dUUmlZVnBuVW5OQ2RGbEZTMVF4U0c5UWFURnRlRXBZY1hKNmRHeGFOMWRWUzJOSFFreG9USGwzUVVkQ1pFNTFLekJWVDFKRVVEUnBSVE5HT1ZoVE9BbzVXRGxpUkdOb1pVMXNibmhTYzNGSU5YWkpURTgwU2pKS0wzWnJZekZ6ZEVGSmEwRndjMGtyTjBnNFEzUnBaSEYzTlhrMWVFTm9VaTlJV0dZMlUxQnlDbXBSV2tGcmVVeERNa1Y0TTBack1YQjJjWGxXU1hwT1pqTnpWM1YyUTJGeFVUVkNhMFpwVDBSMWNUVktPVUpHYUZWV1NqQkhOVEZrWkZOcmJuZGFTbm9LTURaUFRuRlFZVWhpU1Rkd1ZqQm9Oamh4TldsMVFqSlBaR3BwYTNCbmFVNDFWa2c1UlVOTFUzTndZV3czZFhScGQyRmxVM0pQZVhBNVIwdzRORVozWndvelowWTNiekJTVjNZNFRrUkRWakIzTnl0cVl5OUlUbHBpU0VnMlVEZFBjMGs0TVhKVll6UjNTWEY0Y1hscFRsZE9ORmRxU1drMWRqUlRWVDBLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89JyAtLWFwaXNlcnZlci1lbmRwb2ludCAnaHR0cHM6Ly8wRkMzMDgwNjQ4MjlBQTUzNDRDOUYwQTFEODg4OTY1Qi5ncjcudXMtd2VzdC0yLmVrcy5hbWF6b25hd3MuY29tJyAgLS1rdWJlbGV0LWV4dHJhLWFyZ3MgIi0tbm9kZS1sYWJlbHM9bm9kZS5rdWJlcm5ldGVzLmlvL2xpZmVjeWNsZT1ub3JtYWwsbm9kZS10eXBlPWdwdSxudmlkaWEuY29tL2dwdT1ncHUgLS1yZWdpc3Rlci13aXRoLXRhaW50cz1ub2RlLXR5cGU9Z3B1Ok5vU2NoZWR1bGUsbnZpZGlhLmNvbS9ncHU9Z3B1Ok5vU2NoZWR1bGUiICd0ZXN0Y29nbml0bycKCiMgQWxsb3cgdXNlciBzdXBwbGllZCB1c2VyZGF0YSBjb2RlCnN1ZG8geXVtIGluc3RhbGwgLXkgaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2VjMi1kb3dubG9hZHMtd2luZG93cy9TU01BZ2VudC9sYXRlc3QvbGludXhfYW1kNjQvYW1hem9uLXNzbS1hZ2VudC5ycG0gJiYgc3VkbyBzeXN0ZW1jdGwgZW5hYmxlIGFtYXpvbi1zc20tYWdlbnQgJiYgc3VkbyBzeXN0ZW1jdGwgc3RhcnQgYW1hem9uLXNzbS1hZ2VudAo=",
            "vpc_security_group_ids": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-00a1491d47a8a5376",
            "id": "nat-0c641466805997416",
            "network_interface_id": "eni-0903028fac3bd1d37",
            "private_ip": "10.10.0.171",
            "public_ip": "44.236.31.45",
            "subnet_id": "subnet-0e4d108531bfed69b",
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito",
              "Project": "Kubeflow",
              "Terraform": "true"
            }
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_eip.nat",
            "module.sak_kubeflow.module.network.module.vpc.aws_internet_gateway.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.public",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "database",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "elasticache",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "intra",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "private",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "public",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl",
      "name": "redshift",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "database_inbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "database_outbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "elasticache_inbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "elasticache_outbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "intra_inbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "intra_outbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "private_inbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "private_outbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "public_inbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "public_outbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "redshift_inbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_network_acl_rule",
      "name": "redshift_outbound",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_redshift_subnet_group",
      "name": "redshift",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "database_internet_gateway",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "database_ipv6_egress",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "database_nat_gateway",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_ipv6_egress",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": null,
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-06f99a4c8e2749a761080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "nat_gateway_id": "nat-0c641466805997416",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-06f99a4c8e2749a76",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null
            },
            "transit_gateway_id": "",
            "vpc_peering_connection_id": ""
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_eip.nat",
            "module.sak_kubeflow.module.network.module.vpc.aws_internet_gateway.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_nat_gateway.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_route_table.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.public",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": null,
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-08e4ac91df1567cdc",
            "id": "r-rtb-003cd9a9b50b768b71080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-003cd9a9b50b768b7",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null
            },
            "transit_gateway_id": "",
            "vpc_peering_connection_id": ""
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_internet_gateway.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_route_table.public",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway_ipv6",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.external_dns",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "ns",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "failover_routing_policy": [],
            "fqdn": "testcognito.sak.ninja",
            "geolocation_routing_policy": [],
            "health_check_id": null,
            "id": "Z04917561CQAI9UAF27D6_testcognito.sak.ninja_NS",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": null,
            "name": "testcognito.sak.ninja",
            "records": [
              "ns-1533.awsdns-63.org",
              "ns-1587.awsdns-06.co.uk",
              "ns-274.awsdns-34.com",
              "ns-843.awsdns-41.net"
            ],
            "set_identifier": null,
            "ttl": 30,
            "type": "NS",
            "weighted_routing_policy": [],
            "zone_id": "Z04917561CQAI9UAF27D6"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cognito",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "root",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": null,
            "failover_routing_policy": [],
            "fqdn": "testcognito.sak.ninja",
            "geolocation_routing_policy": [],
            "health_check_id": "",
            "id": "Z01457893DJ395M5SVB3I_testcognito.sak.ninja_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": null,
            "name": "testcognito.sak.ninja",
            "records": [
              "127.0.0.1"
            ],
            "set_identifier": "",
            "ttl": 60,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z01457893DJ395M5SVB3I"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cognito",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "alias": [
              {
                "evaluate_target_health": false,
                "name": "d12acob4ugn5vr.cloudfront.net",
                "zone_id": "Z2FDTNDATAQYW2"
              }
            ],
            "allow_overwrite": null,
            "failover_routing_policy": [],
            "fqdn": "auth.testcognito.sak.ninja",
            "geolocation_routing_policy": [],
            "health_check_id": null,
            "id": "Z01457893DJ395M5SVB3I_auth.testcognito.sak.ninja_A",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": null,
            "name": "auth.testcognito.sak.ninja",
            "records": null,
            "set_identifier": null,
            "ttl": null,
            "type": "A",
            "weighted_routing_policy": [],
            "zone_id": "Z01457893DJ395M5SVB3I"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool.this",
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool_domain.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_acm_certificate.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_acm_certificate_validation.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_route53_record.validation",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.acm",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "validation",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "failover_routing_policy": [],
            "fqdn": "_f89d561d40cabc73b378cb1de37d221f.testcognito.sak.ninja",
            "geolocation_routing_policy": [],
            "health_check_id": null,
            "id": "Z01457893DJ395M5SVB3I__f89d561d40cabc73b378cb1de37d221f.testcognito.sak.ninja._CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": null,
            "name": "_f89d561d40cabc73b378cb1de37d221f.testcognito.sak.ninja",
            "records": [
              "_64158a5617976680c39970069bfe3b6f.zzxlnyslwt.acm-validations.aws."
            ],
            "set_identifier": null,
            "ttl": 60,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z01457893DJ395M5SVB3I"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.acm.aws_acm_certificate.this",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cognito.module.cognito_acm",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "validation",
      "each": "list",
      "provider": "module.sak_kubeflow.module.cognito.provider.aws.cognito",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "failover_routing_policy": [],
            "fqdn": "_2d8f19f5155ac6f177a72036596f7e70.auth.testcognito.sak.ninja",
            "geolocation_routing_policy": [],
            "health_check_id": "",
            "id": "Z01457893DJ395M5SVB3I__2d8f19f5155ac6f177a72036596f7e70.auth.testcognito.sak.ninja_CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": null,
            "name": "_2d8f19f5155ac6f177a72036596f7e70.auth.testcognito.sak.ninja",
            "records": [
              "_ccf5954a2c270fb24a98e5adeb2f6e5f.zzxlnyslwt.acm-validations.aws."
            ],
            "set_identifier": "",
            "ttl": 60,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z01457893DJ395M5SVB3I"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_acm_certificate.this",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns",
      "mode": "managed",
      "type": "aws_route53_zone",
      "name": "private",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.external_dns",
      "mode": "managed",
      "type": "aws_route53_zone",
      "name": "public",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "comment": "Managed by Terraform",
            "delegation_set_id": "",
            "force_destroy": true,
            "id": "Z01457893DJ395M5SVB3I",
            "name": "testcognito.sak.ninja.",
            "name_servers": [
              "ns-1533.awsdns-63.org",
              "ns-1587.awsdns-06.co.uk",
              "ns-274.awsdns-34.com",
              "ns-843.awsdns-41.net"
            ],
            "tags": {
              "Environment": "testing",
              "Project": "Kubeflow"
            },
            "vpc": [],
            "vpc_id": null,
            "vpc_region": null,
            "zone_id": "Z01457893DJ395M5SVB3I"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "database",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "elasticache",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "intra",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "rtb-06f99a4c8e2749a76",
            "owner_id": "641456973426",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito",
              "Project": "Kubeflow",
              "Terraform": "true"
            },
            "vpc_id": "vpc-0503cb09e8aad6d2f"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "rtb-003cd9a9b50b768b7",
            "owner_id": "641456973426",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito",
              "Project": "Kubeflow",
              "Terraform": "true"
            },
            "vpc_id": "vpc-0503cb09e8aad6d2f"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "redshift",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "database",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "elasticache",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "intra",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-04e14ad9fb6505b8d",
            "route_table_id": "rtb-06f99a4c8e2749a76",
            "subnet_id": "subnet-0abea3994a93cbc27"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_route_table.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-092ebc516ec90fecd",
            "route_table_id": "rtb-06f99a4c8e2749a76",
            "subnet_id": "subnet-0fec41c314798d8cc"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_route_table.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-042fc163d079d6490",
            "route_table_id": "rtb-003cd9a9b50b768b7",
            "subnet_id": "subnet-0e4d108531bfed69b"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_route_table.public",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.public",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": null,
            "id": "rtbassoc-0cd09ba270956b6e1",
            "route_table_id": "rtb-003cd9a9b50b768b7",
            "subnet_id": "subnet-019358ded1340ce6b"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_route_table.public",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.public",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "redshift",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "redshift_public",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:security-group/sg-0303636fd233210b2",
            "description": "EKS cluster security group.",
            "egress": [],
            "id": "sg-0303636fd233210b2",
            "ingress": [],
            "name": "testcognito20210506080807888600000005",
            "name_prefix": "testcognito",
            "owner_id": "641456973426",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "testing",
              "Name": "testcognito-eks_cluster_sg",
              "Project": "Kubeflow"
            },
            "timeouts": null,
            "vpc_id": "vpc-0503cb09e8aad6d2f"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "workers",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:security-group/sg-00b2e628e13f04b57",
            "description": "Security group for all nodes in the cluster.",
            "egress": [],
            "id": "sg-00b2e628e13f04b57",
            "ingress": [],
            "name": "testcognito20210506085838187900000008",
            "name_prefix": "testcognito",
            "owner_id": "641456973426",
            "revoke_rules_on_delete": false,
            "tags": {
              "Environment": "testing",
              "Name": "testcognito-eks_worker_sg",
              "Project": "Kubeflow",
              "kubernetes.io/cluster/testcognito": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-0503cb09e8aad6d2f"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_egress_internet",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow cluster egress access to the Internet.",
            "from_port": 0,
            "id": "sgrule-707957350",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-0303636fd233210b2",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_https_worker_ingress",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow pods to communicate with the EKS cluster API.",
            "from_port": 443,
            "id": "sgrule-1036128635",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0303636fd233210b2",
            "self": false,
            "source_security_group_id": "sg-00b2e628e13f04b57",
            "to_port": 443,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster_private_access",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_egress_internet",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow nodes all egress to the Internet.",
            "from_port": 0,
            "id": "sgrule-4137871096",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-00b2e628e13f04b57",
            "self": false,
            "source_security_group_id": null,
            "to_port": 0,
            "type": "egress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow workers pods to receive communication from the cluster control plane.",
            "from_port": 1025,
            "id": "sgrule-911602828",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-00b2e628e13f04b57",
            "self": false,
            "source_security_group_id": "sg-0303636fd233210b2",
            "to_port": 65535,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_https",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane.",
            "from_port": 443,
            "id": "sgrule-3009789864",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-00b2e628e13f04b57",
            "self": false,
            "source_security_group_id": "sg-0303636fd233210b2",
            "to_port": 443,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_cluster_kubelet",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "workers_ingress_self",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Allow node to communicate with each other.",
            "from_port": 0,
            "id": "sgrule-1139754388",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "-1",
            "security_group_id": "sg-00b2e628e13f04b57",
            "self": false,
            "source_security_group_id": "sg-00b2e628e13f04b57",
            "to_port": 65535,
            "type": "ingress"
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "managed",
      "type": "aws_ssm_parameter",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "allowed_pattern": "",
            "arn": "arn:aws:ssm:us-west-2:641456973426:parameter/testcognito/argocd/password",
            "description": "A password for accessing ArgoCD installation in testcognito EKS cluster",
            "id": "/testcognito/argocd/password",
            "key_id": "alias/aws/ssm",
            "name": "/testcognito/argocd/password",
            "overwrite": null,
            "tags": null,
            "tier": "Standard",
            "type": "SecureString",
            "value": "BYCfR(h[999-ekmG\u00269Z*",
            "version": 1
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.random_password.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "database",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "elasticache",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "intra",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:subnet/subnet-0abea3994a93cbc27",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az1",
            "cidr_block": "10.10.200.0/24",
            "id": "subnet-0abea3994a93cbc27",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "641456973426",
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito-private",
              "Project": "Kubeflow",
              "Terraform": "true",
              "kubernetes.io/cluster/testcognito": "shared"
            },
            "timeouts": null,
            "vpc_id": "vpc-0503cb09e8aad6d2f"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:subnet/subnet-0fec41c314798d8cc",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2b",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "10.10.201.0/24",
            "id": "subnet-0fec41c314798d8cc",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "641456973426",
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito-private",
              "Project": "Kubeflow",
              "Terraform": "true",
              "kubernetes.io/cluster/testcognito": "shared"
            },
            "timeouts": null,
            "vpc_id": "vpc-0503cb09e8aad6d2f"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:subnet/subnet-0e4d108531bfed69b",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az1",
            "cidr_block": "10.10.0.0/24",
            "id": "subnet-0e4d108531bfed69b",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "641456973426",
            "tags": {
              "Environment": "testing",
              "KubernetesCluster": "testcognito",
              "Name": "testing-testcognito-public",
              "Project": "Kubeflow",
              "Terraform": "true",
              "kubernetes.io/cluster/testcognito": "shared",
              "kubernetes.io/role/elb": ""
            },
            "timeouts": null,
            "vpc_id": "vpc-0503cb09e8aad6d2f"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:subnet/subnet-019358ded1340ce6b",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2b",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "10.10.1.0/24",
            "id": "subnet-019358ded1340ce6b",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "641456973426",
            "tags": {
              "Environment": "testing",
              "KubernetesCluster": "testcognito",
              "Name": "testing-testcognito-public",
              "Project": "Kubeflow",
              "Terraform": "true",
              "kubernetes.io/cluster/testcognito": "shared",
              "kubernetes.io/role/elb": ""
            },
            "timeouts": null,
            "vpc_id": "vpc-0503cb09e8aad6d2f"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "redshift",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:641456973426:vpc/vpc-0503cb09e8aad6d2f",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.10.0.0/16",
            "default_network_acl_id": "acl-0f973fa7ebc088a53",
            "default_route_table_id": "rtb-083c410f24ca7612f",
            "default_security_group_id": "sg-0c319b4b876a9ad50",
            "dhcp_options_id": "dopt-5b85d223",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-0503cb09e8aad6d2f",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-083c410f24ca7612f",
            "owner_id": "641456973426",
            "tags": {
              "Environment": "testing",
              "Name": "testing-testcognito",
              "Project": "Kubeflow",
              "Terraform": "true"
            }
          },
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_dhcp_options",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_dhcp_options_association",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "apigw",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "appmesh_envoy_management",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "appstream",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "athena",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "cloud_directory",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "cloudformation",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "cloudtrail",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "codebuild",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "codecommit",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "codepipeline",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "config",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "dynamodb",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ec2",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ec2_autoscaling",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ec2messages",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecr_api",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecr_dkr",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecs",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecs_agent",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ecs_telemetry",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "efs",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "elasticloadbalancing",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "events",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "git_codecommit",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "glue",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "kinesis_firehose",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "kinesis_streams",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "kms",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "logs",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "monitoring",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "rekognition",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "s3",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sagemaker_api",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sagemaker_notebook",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sagemaker_runtime",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "secretsmanager",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "servicecatalog",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sns",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sqs",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ssm",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "ssmmessages",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "storagegateway",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "sts",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "transfer",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint",
      "name": "transferserver",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "intra_dynamodb",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "intra_s3",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "private_dynamodb",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "private_s3",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "public_dynamodb",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_endpoint_route_table_association",
      "name": "public_s3",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpc_ipv4_cidr_block_association",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway_attachment",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway_route_propagation",
      "name": "intra",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway_route_propagation",
      "name": "private",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.network.module.vpc",
      "mode": "managed",
      "type": "aws_vpn_gateway_route_propagation",
      "name": "public",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.aws",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "managed",
      "type": "helm_release",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.helm",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "max_history": 0,
            "metadata": [
              {
                "chart": "argo-cd",
                "name": "argocd",
                "namespace": "argocd",
                "revision": 1,
                "values": "{\"dex\":{\"enabled\":false},\"global\":{\"securityContext\":{\"fsGroup\":999}},\"installCRDs\":false,\"repoServer\":{\"env\":[{\"name\":\"AWS_DEFAULT_REGION\",\"value\":\"us-west-2\"}],\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::641456973426:role/testcognito_argocd\"},\"create\":true},\"volumeMounts\":[{\"mountPath\":\"/opt/decryptor/bin\",\"name\":\"decryptor\"}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"decryptor\",\"path\":\"decryptor\"}],\"name\":\"argocd-decryptor\"},\"name\":\"decryptor\"}]},\"server\":{\"additionalApplications\":[{\"destination\":{\"namespace\":\"argocd\",\"server\":\"https://kubernetes.default.svc\"},\"name\":\"swiss-army-kube\",\"namespace\":\"argocd\",\"project\":\"default\",\"source\":{\"path\":\"examples/simple/argocd-applications\",\"plugin\":{\"name\":\"decryptor\"},\"repoURL\":\"https://github.com/provectus/sak-kubeflow\",\"targetRevision\":\"test\"},\"syncPolicy\":{\"automated\":{\"prune\":true,\"selfHeal\":true}}}],\"config\":{\"configManagementPlugins\":\"- \\\"generate\\\":\\n    \\\"args\\\":\\n    - \\\"/opt/decryptor/bin/decryptor\\\"\\n    \\\"command\\\":\\n    - \\\"/usr/bin/python3\\\"\\n  \\\"init\\\":\\n    \\\"args\\\":\\n    - \\\"install\\\"\\n    - \\\"boto3\\\"\\n    \\\"command\\\":\\n    - \\\"/usr/bin/pip3\\\"\\n  \\\"name\\\": \\\"decryptor\\\"\\n\"}}}",
                "version": "2.7.4"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "postrender": [],
            "recreate_pods": true,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "dex.enabled",
                "value": "false"
              },
              {
                "name": "global.securityContext.fsGroup",
                "value": "999"
              },
              {
                "name": "installCRDs",
                "value": "false"
              },
              {
                "name": "repoServer.env[0].name",
                "value": "AWS_DEFAULT_REGION"
              },
              {
                "name": "repoServer.env[0].value",
                "value": "us-west-2"
              },
              {
                "name": "repoServer.serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "value": "arn:aws:iam::641456973426:role/testcognito_argocd"
              },
              {
                "name": "repoServer.serviceAccount.create",
                "value": "true"
              },
              {
                "name": "repoServer.volumeMounts[0].mountPath",
                "value": "/opt/decryptor/bin"
              },
              {
                "name": "repoServer.volumeMounts[0].name",
                "value": "decryptor"
              },
              {
                "name": "repoServer.volumes[0].configMap.items[0].key",
                "value": "decryptor"
              },
              {
                "name": "repoServer.volumes[0].configMap.items[0].path",
                "value": "decryptor"
              },
              {
                "name": "repoServer.volumes[0].configMap.name",
                "value": "argocd-decryptor"
              },
              {
                "name": "repoServer.volumes[0].name",
                "value": "decryptor"
              },
              {
                "name": "server.additionalApplications[0].destination.namespace",
                "value": "argocd"
              },
              {
                "name": "server.additionalApplications[0].destination.server",
                "value": "https://kubernetes.default.svc"
              },
              {
                "name": "server.additionalApplications[0].name",
                "value": "swiss-army-kube"
              },
              {
                "name": "server.additionalApplications[0].namespace",
                "value": "argocd"
              },
              {
                "name": "server.additionalApplications[0].project",
                "value": "default"
              },
              {
                "name": "server.additionalApplications[0].source.path",
                "value": "examples/simple/argocd-applications"
              },
              {
                "name": "server.additionalApplications[0].source.plugin.name",
                "value": "decryptor"
              },
              {
                "name": "server.additionalApplications[0].source.repoURL",
                "value": "https://github.com/provectus/sak-kubeflow"
              },
              {
                "name": "server.additionalApplications[0].source.targetRevision",
                "value": "test"
              },
              {
                "name": "server.additionalApplications[0].syncPolicy.automated.prune",
                "value": "true"
              },
              {
                "name": "server.additionalApplications[0].syncPolicy.automated.selfHeal",
                "value": "true"
              },
              {
                "name": "server.config.configManagementPlugins",
                "value": "- \"generate\":\n    \"args\":\n    - \"/opt/decryptor/bin/decryptor\"\n    \"command\":\n    - \"/usr/bin/python3\"\n  \"init\":\n    \"args\":\n    - \"install\"\n    - \"boto3\"\n    \"command\":\n    - \"/usr/bin/pip3\"\n  \"name\": \"decryptor\"\n"
              }
            ],
            "set_sensitive": [],
            "set_string": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 1200,
            "values": null,
            "verify": false,
            "version": "2.7.4",
            "wait": true
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.argocd.module.iam_assumable_role_admin.aws_iam_role.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "aws_auth",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.kubernetes",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "mapAccounts": "[]\n",
              "mapRoles": "- \"groups\":\n  - \"system:bootstrappers\"\n  - \"system:nodes\"\n  \"rolearn\": \"arn:aws:iam::641456973426:role/testcognito20210506085834656400000003\"\n  \"username\": \"system:node:{{EC2PrivateDNSName}}\"\n",
              "mapUsers": "[]\n"
            },
            "id": "kube-system/aws-auth",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "aws-auth",
                "namespace": "kube-system",
                "resource_version": "4441",
                "self_link": "/api/v1/namespaces/kube-system/configmaps/aws-auth",
                "uid": "77439391-3c69-400e-b5c7-bacbe235d7f4"
              }
            ]
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "decryptor",
      "provider": "module.sak_kubeflow.provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "decryptor": "#! /usr/bin/env python3\n\nimport glob\nimport os\n\ndef decrypt(string):\n  import boto3\n  import base64\n  client = boto3.client('kms')\n  meta = client.decrypt(CiphertextBlob=bytes(base64.b64decode(\"%s==\" % string)),KeyId=\"arn:aws:kms:us-west-2:641456973426:key/641787b0-0b2b-4e8d-98c6-038f9f0322fd\")\n  plaintext = meta[u'Plaintext']\n  return plaintext.decode()\n\nfor file in glob.glob('./*.y*ml'):\n  print(\"---\")\n  with open(file) as f:\n    for line in f:\n      if line.find(\"KMS_ENC:\") \u003e 0:\n        encrypted = line.split(\"KMS_ENC\")[1].split(\":\")[1]\n        decrypted = decrypt(encrypted)\n        line = line.replace(\"KMS_ENC:%s:\" % encrypted, decrypted)\n      print(line,end = '')\n"
            },
            "id": "argocd/argocd-decryptor",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "argocd-decryptor",
                "namespace": "argocd",
                "resource_version": "4416",
                "self_link": "/api/v1/namespaces/argocd/configmaps/argocd-decryptor",
                "uid": "89e540d7-8859-4324-b2d8-9f0660640213"
              }
            ]
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.aws_kms_key.this",
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "cert-manager",
                "resource_version": "4535",
                "self_link": "/api/v1/namespaces/cert-manager",
                "uid": "2da921d9-7bab-4696-982e-64a105c7187c"
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.kubernetes",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.external_dns",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "this",
      "each": "list",
      "provider": "module.sak_kubeflow.provider.kubernetes",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-system",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "ingress-system",
                "resource_version": "4536",
                "self_link": "/api/v1/namespaces/ingress-system",
                "uid": "4d1ba39a-34da-4fdd-8b1c-4bb360d3ec69"
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "this",
      "provider": "module.sak_kubeflow.provider.kubernetes",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "argocd",
                "resource_version": "4404",
                "self_link": "/api/v1/namespaces/argocd",
                "uid": "a1213040-0782-4782-8883-624416d41741"
              }
            ],
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubeflow",
      "mode": "managed",
      "type": "local_file",
      "name": "ingress",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"networking.k8s.io/v1beta1\"\n\"kind\": \"Ingress\"\n\"metadata\":\n  \"annotations\":\n    \"alb.ingress.kubernetes.io/auth-idp-cognito\": \"{\\\"UserPoolArn\\\":\\\"arn:aws:cognito-idp:us-west-2:641456973426:userpool/us-west-2_MEY2tGhva\\\",\\\"UserPoolClientId\\\":\\\"4v4kdpto2km0l318t970o3f7km\\\",\\\"UserPoolDomain\\\":\\\"auth.testcognito.sak.ninja\\\"}\"\n    \"alb.ingress.kubernetes.io/auth-type\": \"cognito\"\n    \"alb.ingress.kubernetes.io/certificate-arn\": \"arn:aws:acm:us-west-2:641456973426:certificate/b5f5b9d6-683c-4663-bf03-3860137c2568\"\n    \"alb.ingress.kubernetes.io/listen-ports\": \"[{\\\"HTTPS\\\":443}]\"\n    \"alb.ingress.kubernetes.io/scheme\": \"internet-facing\"\n    \"kubernetes.io/ingress.class\": \"alb\"\n  \"labels\":\n    \"app\": \"kubeflow\"\n  \"name\": \"istio-ingress\"\n  \"namespace\": \"istio-system\"\n\"spec\":\n  \"rules\":\n  - \"host\": \"kubeflow.testcognito.sak.ninja\"\n    \"http\":\n      \"paths\":\n      - \"backend\":\n          \"serviceName\": \"istio-ingressgateway\"\n          \"servicePort\": 80\n        \"path\": \"/*\"\n  \"tls\":\n  - \"hosts\":\n    - \"kubeflow.testcognito.sak.ninja\"\n    \"secretName\": \"kubeflow-tls-certs\"\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/kfdefs/ingress.yaml",
            "id": "08fd45bf8770f279b1ad9b2ca188147b0b40a8c0",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.aws_cognito_user_pool_client.kubeflow",
            "module.sak_kubeflow.module.acm.aws_acm_certificate.this",
            "module.sak_kubeflow.module.acm.aws_acm_certificate_validation.this",
            "module.sak_kubeflow.module.acm.aws_route53_record.validation",
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool.this",
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool_domain.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_acm_certificate.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_acm_certificate_validation.this",
            "module.sak_kubeflow.module.cognito.module.cognito_acm.aws_route53_record.validation",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubeflow",
      "mode": "managed",
      "type": "local_file",
      "name": "issuer",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"cert-manager.io/v1alpha2\"\n\"kind\": \"ClusterIssuer\"\n\"metadata\":\n  \"name\": \"kubeflow-self-signing-issuer\"\n\"spec\":\n  \"selfSigned\": {}\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/kfdefs/issuer.yaml",
            "id": "faabfc46d93da92f505057a217db2fa643f31de5",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager",
      "mode": "managed",
      "type": "local_file",
      "name": "issuers",
      "each": "map",
      "provider": "provider.local",
      "instances": [
        {
          "index_key": "prod",
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"cert-manager.io/v1alpha2\"\n\"kind\": \"ClusterIssuer\"\n\"metadata\":\n  \"name\": \"letsencrypt-prod\"\n\"spec\":\n  \"acme\":\n    \"email\": \"dkharlamov@provectus.com\"\n    \"privateKeySecretRef\":\n      \"name\": \"letsencrypt-prod\"\n    \"server\": \"https://acme-v02.api.letsencrypt.org/directory\"\n    \"solvers\":\n    - \"dns01\":\n        \"route53\":\n          \"hostedZoneID\": \"Z01457893DJ395M5SVB3I\"\n          \"region\": \"us-west-2\"\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/issuers/cert-manager-prod.yaml",
            "id": "137e6bde1aa2d8c61e3b5e51509cae2469c5d3a6",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": "staging",
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"cert-manager.io/v1alpha2\"\n\"kind\": \"ClusterIssuer\"\n\"metadata\":\n  \"name\": \"letsencrypt-staging\"\n\"spec\":\n  \"acme\":\n    \"email\": \"dkharlamov@provectus.com\"\n    \"privateKeySecretRef\":\n      \"name\": \"letsencrypt-staging\"\n    \"server\": \"https://acme-staging-v02.api.letsencrypt.org/directory\"\n    \"solvers\":\n    - \"dns01\":\n        \"route53\":\n          \"hostedZoneID\": \"Z01457893DJ395M5SVB3I\"\n          \"region\": \"us-west-2\"\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/issuers/cert-manager-staging.yaml",
            "id": "acf860697cdab0ec6f4d55422805ff08ca334393",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager",
      "mode": "managed",
      "type": "local_file",
      "name": "issuers_bom",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"argoproj.io/v1alpha1\"\n\"kind\": \"Application\"\n\"metadata\":\n  \"name\": \"cert-manager-issuers\"\n  \"namespace\": \"argocd\"\n\"spec\":\n  \"destination\":\n    \"namespace\": \"cert-manager\"\n    \"server\": \"https://kubernetes.default.svc\"\n  \"project\": \"default\"\n  \"source\":\n    \"path\": \"examples/simple/argocd-applications/issuers\"\n    \"repoURL\": \"https://github.com/provectus/sak-kubeflow\"\n    \"targetRevision\": \"test\"\n  \"syncPolicy\":\n    \"automated\":\n      \"prune\": true\n      \"selfHeal\": true\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/cert-manager-issuers.yaml",
            "id": "0202cb558d2c14758b5f13cd836991c0ce8e8e7a",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.cert_manager.kubernetes_namespace.this",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubeflow",
      "mode": "managed",
      "type": "local_file",
      "name": "kfdef",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"kfdef.apps.kubeflow.org/v1\"\n\"kind\": \"KfDef\"\n\"metadata\":\n  \"name\": \"kubeflow\"\n  \"namespace\": \"kubeflow\"\n\"spec\":\n  \"applications\":\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"application/v3\"\n    \"name\": \"application\"\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"stacks/aws/application/istio-stack\"\n    \"name\": \"istio-stack\"\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"stacks/aws/application/cluster-local-gateway\"\n    \"name\": \"cluster-local-gateway\"\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"stacks/aws/application/istio\"\n    \"name\": \"istio\"\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"metacontroller/base\"\n    \"name\": \"metacontroller\"\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"admission-webhook/bootstrap/overlays/application\"\n    \"name\": \"bootstrap\"\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"stacks/kubernetes\"\n    \"name\": \"kubeflow-apps\"\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"knative/installs/generic\"\n    \"name\": \"knative\"\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"kfserving/installs/generic\"\n    \"name\": \"kfserving\"\n  - \"kustomizeConfig\":\n      \"repoRef\":\n        \"name\": \"manifests\"\n        \"path\": \"aws/aws-istio-authz-adaptor/base_v3\"\n    \"name\": \"aws-istio-authz-adaptor\"\n  \"repos\":\n  - \"name\": \"manifests\"\n    \"uri\": \"https://github.com/kubeflow/manifests/archive/v1.2-branch.tar.gz\"\n  \"version\": \"v1.2-branch\"\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/kfdefs/v1.1.0.yaml",
            "id": "8b40aff7694ee6cf56ba6d6fde938d1201251885",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "each": "list",
      "provider": "provider.local",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: v1\npreferences: {}\nkind: Config\n\nclusters:\n- cluster:\n    server: https://0FC308064829AA5344C9F0A1D888965B.gr7.us-west-2.eks.amazonaws.com\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EVXdOakE0TVRRME1Gb1hEVE14TURVd05EQTRNVFEwTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWFNCjRFS3dldDExLzNKOTg1eldtRHpYTExJaW9wcXllbGxBeThoTWR6eXIwRC8xZ0YrQmFPYjZDdE9vRDNWd0NCZlEKdzZ1NmlqSHNqVWx2QlBZS3NZYzdzbUloUm9vbUsrNEtKOEl1YjVGRllpY3FaL2FxWjdteXFtWlJScGJuTUdzYwp5cGJOWGQrOHd0UXJXK0NLdUlBa2I5UDZUT2xTNnNZNW0vSjh0QnRIUUh5T01CeDNCbzRqVjBNcHpraEQzM0x4CnIzV3ZxWHRYYXhQcVZSaGNCZ1BtL2JDNWZFRSs4c0pIbHUwTkMwb2RFZHQzQXVuYnErTm53UDljblV5MzlLU20KUC9qSVRKaFJUVlB3Y2R6Ris4Mk56NmJ2N3ZnT0FBdlNsaE5kc2Zra0dGNGlWaWhrWmxYQzJybzJhZWkyWWFtUgpIbEp2b3A1OExZYTg0eENwUi9NQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHS3dSeHEzUEQrRHljdmdWeTdkZDhJLy9yUFEKWTRiYVpnUnNCdFlFS1QxSG9QaTFteEpYcXJ6dGxaN1dVS2NHQkxoTHl3QUdCZE51KzBVT1JEUDRpRTNGOVhTOAo5WDliRGNoZU1sbnhSc3FINXZJTE80SjJKL3ZrYzFzdEFJa0Fwc0krN0g4Q3RpZHF3NXk1eENoUi9IWGY2U1ByCmpRWkFreUxDMkV4M0ZrMXB2cXlWSXpOZjNzV3V2Q2FxUTVCa0ZpT0R1cTVKOUJGaFVWSjBHNTFkZFNrbndaSnoKMDZPTnFQYUhiSTdwVjBoNjhxNWl1QjJPZGppa3BnaU41Vkg5RUNLU3NwYWw3dXRpd2FlU3JPeXA5R0w4NEZ3ZwozZ0Y3bzBSV3Y4TkRDVjB3NytqYy9ITlpiSEg2UDdPc0k4MXJVYzR3SXF4cXlpTldONFdqSWk1djRTVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  name: testcognito\n\ncontexts:\n- context:\n    cluster: testcognito\n    user: testcognito\n  name: testcognito\n\ncurrent-context: testcognito\n\nusers:\n- name: testcognito\n  user:\n    exec:\n      apiVersion: client.authentication.k8s.io/v1alpha1\n      command: aws-iam-authenticator\n      args:\n        - \"token\"\n        - \"-i\"\n        - \"testcognito\"",
            "content_base64": null,
            "directory_permission": "0755",
            "file_permission": "0644",
            "filename": "./kubeconfig_testcognito",
            "id": "c31c65d3198959a537591c2324e0d1f9577c65de",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubeflow",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeflow",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"argoproj.io/v1alpha1\"\n\"kind\": \"Application\"\n\"metadata\":\n  \"name\": \"kubeflow\"\n  \"namespace\": \"argocd\"\n\"spec\":\n  \"destination\":\n    \"namespace\": \"kubeflow\"\n    \"server\": \"https://kubernetes.default.svc\"\n  \"project\": \"default\"\n  \"source\":\n    \"path\": \"examples/simple/argocd-applications/kfdefs\"\n    \"repoURL\": \"https://github.com/provectus/sak-kubeflow\"\n    \"targetRevision\": \"test\"\n  \"syncPolicy\":\n    \"automated\":\n      \"prune\": true\n      \"selfHeal\": true\n    \"syncOptions\":\n    - \"CreateNamespace=false\"\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/kubeflow.yaml",
            "id": "8443bf49c44022b02fea6cd5f68a2a2f3dca9f94",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubeflow",
      "mode": "managed",
      "type": "local_file",
      "name": "kubeflow_operator",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"argoproj.io/v1alpha1\"\n\"kind\": \"Application\"\n\"metadata\":\n  \"name\": \"kubeflow-operator\"\n  \"namespace\": \"argocd\"\n\"spec\":\n  \"destination\":\n    \"namespace\": \"operators\"\n    \"server\": \"https://kubernetes.default.svc\"\n  \"project\": \"default\"\n  \"source\":\n    \"kustomize\":\n      \"images\":\n      - \"aipipeline/kubeflow-operator=provectuslabs/kubeflow-operator:master\"\n    \"path\": \"deploy\"\n    \"repoURL\": \"https://github.com/kubeflow/kfctl\"\n    \"targetRevision\": \"v1.2-branch\"\n  \"syncPolicy\":\n    \"automated\":\n      \"prune\": true\n      \"selfHeal\": true\n    \"syncOptions\":\n    - \"CreateNamespace=true\"\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/kubeflow-operator.yaml",
            "id": "7edaeb2b2a534b832a0e0a94899daa86559c2fad",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubeflow",
      "mode": "managed",
      "type": "local_file",
      "name": "namespace",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"v1\"\n\"kind\": \"Namespace\"\n\"metadata\":\n  \"labels\":\n    \"control-plane\": \"kubeflow\"\n    \"istio-injection\": \"enabled\"\n  \"name\": \"kubeflow\"\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/kubeflow-namespace.yaml",
            "id": "17149d9efd10dd580680ec81630cfe822cc7a4cd",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cert_manager",
      "mode": "managed",
      "type": "local_file",
      "name": "this",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"argoproj.io/v1alpha1\"\n\"kind\": \"Application\"\n\"metadata\":\n  \"name\": \"cert-manager\"\n  \"namespace\": \"argocd\"\n\"spec\":\n  \"destination\":\n    \"namespace\": \"cert-manager\"\n    \"server\": \"https://kubernetes.default.svc\"\n  \"project\": \"default\"\n  \"source\":\n    \"chart\": \"cert-manager\"\n    \"helm\":\n      \"parameters\":\n      - \"name\": \"installCRDs\"\n        \"value\": \"true\"\n      - \"name\": \"rbac.serviceAccountAnnotations.eks\\\\.amazonaws\\\\.com/role-arn\"\n        \"value\": \"arn:aws:iam::641456973426:role/testcognito_cert-manager\"\n      - \"name\": \"aws.region\"\n        \"value\": \"us-west-2\"\n      - \"name\": \"domainFilters[0]\"\n        \"value\": \"testcognito.sak.ninja\"\n    \"repoURL\": \"https://charts.jetstack.io\"\n    \"targetRevision\": \"v0.15.1\"\n  \"syncPolicy\":\n    \"automated\":\n      \"prune\": true\n      \"selfHeal\": true\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/cert-manager.yaml",
            "id": "3aa1fce13202a65a900c4e956a475a0db5636a59",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.cert_manager.kubernetes_namespace.this",
            "module.sak_kubeflow.module.cert_manager.module.iam_assumable_role_admin.aws_iam_role.this",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.cluster_autoscaler",
      "mode": "managed",
      "type": "local_file",
      "name": "this",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"argoproj.io/v1alpha1\"\n\"kind\": \"Application\"\n\"metadata\":\n  \"name\": \"aws-cluster-autoscaler-chart\"\n  \"namespace\": \"argocd\"\n\"spec\":\n  \"destination\":\n    \"namespace\": \"kube-system\"\n    \"server\": \"https://kubernetes.default.svc\"\n  \"project\": \"default\"\n  \"source\":\n    \"chart\": \"cluster-autoscaler-chart\"\n    \"helm\":\n      \"parameters\":\n      - \"name\": \"rbac.serviceAccount.annotations.eks\\\\.amazonaws\\\\.com/role-arn\"\n        \"value\": \"arn:aws:iam::641456973426:role/testcognito_cluster-autoscaler\"\n      - \"name\": \"cloudProvider\"\n        \"value\": \"aws\"\n      - \"name\": \"image.repository\"\n        \"value\": \"us.gcr.io/k8s-artifacts-prod/autoscaling/cluster-autoscaler\"\n      - \"name\": \"image.tag\"\n        \"value\": \"v1.15.7\"\n      - \"name\": \"autoDiscovery.clusterName\"\n        \"value\": \"testcognito\"\n      - \"name\": \"autoDiscovery.enabled\"\n        \"value\": \"true\"\n      - \"name\": \"awsRegion\"\n        \"value\": \"us-west-2\"\n      - \"name\": \"extraArgs.balance-similar-node-groups\"\n        \"value\": \"true\"\n      - \"name\": \"extraArgs.scale-down-enabled\"\n        \"value\": \"true\"\n      - \"name\": \"rbac.create\"\n        \"value\": \"true\"\n      - \"name\": \"rbac.pspEnabled\"\n        \"value\": \"true\"\n      - \"name\": \"resources.limits.cpu\"\n        \"value\": \"100m\"\n      - \"name\": \"resources.limits.memory\"\n        \"value\": \"300Mi\"\n      - \"name\": \"resources.requests.cpu\"\n        \"value\": \"100m\"\n      - \"name\": \"resources.requests.memory\"\n        \"value\": \"300Mi\"\n    \"repoURL\": \"https://kubernetes.github.io/autoscaler\"\n    \"targetRevision\": \"1.1.1\"\n  \"syncPolicy\":\n    \"automated\":\n      \"prune\": true\n      \"selfHeal\": true\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/aws-cluster-autoscaler-chart.yaml",
            "id": "e92e1ccb6cf20ef292be91c67159f30c960ab32a",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.cluster_autoscaler.module.iam_assumable_role_admin.aws_iam_role.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.external_dns",
      "mode": "managed",
      "type": "local_file",
      "name": "this",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"argoproj.io/v1alpha1\"\n\"kind\": \"Application\"\n\"metadata\":\n  \"name\": \"external-dns\"\n  \"namespace\": \"argocd\"\n\"spec\":\n  \"destination\":\n    \"namespace\": \"kube-system\"\n    \"server\": \"https://kubernetes.default.svc\"\n  \"project\": \"default\"\n  \"source\":\n    \"chart\": \"external-dns\"\n    \"helm\":\n      \"parameters\":\n      - \"name\": \"serviceAccount.annotations.eks\\\\.amazonaws\\\\.com/role-arn\"\n        \"value\": \"arn:aws:iam::641456973426:role/testcognito_external-dns\"\n      - \"name\": \"aws.region\"\n        \"value\": \"us-west-2\"\n      - \"name\": \"domainFilters[0]\"\n        \"value\": \"testcognito.sak.ninja\"\n    \"repoURL\": \"https://charts.bitnami.com/bitnami\"\n    \"targetRevision\": \"3.4.0\"\n  \"syncPolicy\":\n    \"automated\":\n      \"prune\": true\n      \"selfHeal\": true\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/external-dns.yaml",
            "id": "82714bfbeaf1b1bb341a31e3aa923300a82988be",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.external_dns.module.iam_assumable_role_admin.aws_iam_role.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.alb_ingress",
      "mode": "managed",
      "type": "local_file",
      "name": "this",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"argoproj.io/v1alpha1\"\n\"kind\": \"Application\"\n\"metadata\":\n  \"name\": \"aws-alb-ingress-controller\"\n  \"namespace\": \"argocd\"\n\"spec\":\n  \"destination\":\n    \"namespace\": \"ingress-system\"\n    \"server\": \"https://kubernetes.default.svc\"\n  \"project\": \"default\"\n  \"source\":\n    \"chart\": \"aws-alb-ingress-controller\"\n    \"helm\":\n      \"parameters\":\n      - \"name\": \"rbac.serviceAccount.annotations.eks\\\\.amazonaws\\\\.com/role-arn\"\n        \"value\": \"arn:aws:iam::641456973426:role/testcognito_aws-alb-ingress-controller\"\n      - \"name\": \"clusterName\"\n        \"value\": \"testcognito\"\n      - \"name\": \"awsVpcID\"\n        \"value\": \"vpc-0503cb09e8aad6d2f\"\n      - \"name\": \"awsRegion\"\n        \"value\": \"us-west-2\"\n      - \"name\": \"resources.limits.cpu\"\n        \"value\": \"100m\"\n      - \"name\": \"resources.limits.memory\"\n        \"value\": \"300Mi\"\n      - \"name\": \"resources.requests.cpu\"\n        \"value\": \"100m\"\n      - \"name\": \"resources.requests.memory\"\n        \"value\": \"300Mi\"\n    \"repoURL\": \"https://kubernetes-charts-incubator.storage.googleapis.com\"\n    \"targetRevision\": \"1.0.2\"\n  \"syncPolicy\":\n    \"automated\":\n      \"prune\": true\n      \"selfHeal\": true\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/aws-alb-ingress-controller.yaml",
            "id": "ecbb5aeec842f482d27e699d7a78f0ba40806618",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.alb_ingress.kubernetes_namespace.this",
            "module.sak_kubeflow.module.alb_ingress.module.iam_assumable_role_admin.aws_iam_role.this",
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.kubernetes.aws_iam_openid_connect_provider.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_autoscaling_group.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_cloudwatch_log_group.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSClusterPolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.cluster_AmazonEKSServicePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEC2ContainerRegistryReadOnly",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKSWorkerNodePolicy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_AmazonEKS_CNI_Policy",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role_policy_attachment.workers_additional_policies",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_configuration.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_https_worker_ingress",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_egress_internet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_https",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_cluster_kubelet",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.workers_ingress_self",
            "module.sak_kubeflow.module.kubernetes.module.eks.kubernetes_config_map.aws_auth",
            "module.sak_kubeflow.module.kubernetes.module.eks.local_file.kubeconfig",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.aws_eks_node_group.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups.random_pet.node_groups",
            "module.sak_kubeflow.module.kubernetes.module.eks.null_resource.wait_for_cluster",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.random_pet.workers_launch_template",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "managed",
      "type": "local_file",
      "name": "this",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "\"apiVersion\": \"argoproj.io/v1alpha1\"\n\"kind\": \"Application\"\n\"metadata\":\n  \"name\": \"argocd\"\n  \"namespace\": \"argocd\"\n\"spec\":\n  \"destination\":\n    \"namespace\": \"argocd\"\n    \"server\": \"https://kubernetes.default.svc\"\n  \"project\": \"default\"\n  \"source\":\n    \"chart\": \"argo-cd\"\n    \"helm\":\n      \"parameters\":\n      - \"name\": \"server.rbacConfig.policy\\\\.default\"\n        \"value\": \"role:readonly\"\n      - \"name\": \"server.rbacConfig.policy\\\\.csv\"\n        \"value\": |\n          g, administrators, role:admin\n      - \"name\": \"server.config.oidc\\\\.config\"\n        \"value\": |\n          \"clientID\": \"6tfh6f4s6uet61vikn989qbo1h\"\n          \"clientSecret\": \"KMS_ENC:AQICAHg5eAZx0iXMSZZlALkTULYDMRXCmEM88YsGYdKnVKxrJwHpBG/Aw9jBd9VqwhYhFtX6AAAAlDCBkQYJKoZIhvcNAQcGoIGDMIGAAgEAMHsGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMZYJT/PwjggQtAjTpAgEQgE6KMO51EgKlL7Vs+VZlMMtIPQ5kl/sM/xFC8ywZ148atu2lC91WPAcbZ8rk+J3K2SWdOLfETQ3q86MeuJHHDrbc81lHq+jCfcXMHDo+D28=:\"\n          \"issuer\": \"https://cognito-idp.us-west-2.amazonaws.com/us-west-2_MEY2tGhva\"\n          \"name\": \"Cognito\"\n          \"requestedIDTokenClaims\":\n            \"cognito:groups\":\n              \"essential\": true\n          \"requestedScopes\":\n          - \"openid\"\n          - \"profile\"\n          - \"email\"\n      - \"name\": \"server.ingress.paths[0]\"\n        \"value\": \"/*\"\n      - \"name\": \"server.extraArgs[0]\"\n        \"value\": \"--insecure\"\n      - \"name\": \"server.service.type\"\n        \"value\": \"NodePort\"\n      - \"name\": \"configs.secret.argocdServerAdminPassword\"\n        \"value\": \"$2a$10$lTXZS8vR0ys3fTB6k7LFnOegmDgWRkz04schmxM/kQUapKadm7d.2\"\n      - \"name\": \"server.ingress.enabled\"\n        \"value\": \"true\"\n      - \"name\": \"server.config.url\"\n        \"value\": \"https://argocd.testcognito.sak.ninja\"\n      - \"name\": \"server.ingress.tls[0].hosts[0]\"\n        \"value\": \"argocd.testcognito.sak.ninja\"\n      - \"name\": \"server.ingress.hosts[0]\"\n        \"value\": \"argocd.testcognito.sak.ninja\"\n      - \"name\": \"server.ingress.tls[0].secretName\"\n        \"value\": \"argocd-testcognito.sak.ninja-tls\"\n      - \"name\": \"server.ingress.annotations.alb\\\\.ingress\\\\.kubernetes\\\\.io/certificate-arn\"\n        \"value\": \"arn:aws:acm:us-west-2:641456973426:certificate/b5f5b9d6-683c-4663-bf03-3860137c2568\"\n      - \"name\": \"server.ingress.annotations.alb\\\\.ingress\\\\.kubernetes\\\\.io/listen-ports\"\n        \"value\": \"[{\\\"HTTPS\\\":443}]\"\n      - \"name\": \"server.ingress.annotations.alb\\\\.ingress\\\\.kubernetes\\\\.io/scheme\"\n        \"value\": \"internet-facing\"\n      - \"name\": \"server.ingress.annotations.kubernetes\\\\.io/ingress\\\\.class\"\n        \"value\": \"alb\"\n      - \"name\": \"dex.enabled\"\n        \"value\": \"false\"\n      - \"name\": \"global.securityContext.fsGroup\"\n        \"value\": \"999\"\n      - \"name\": \"installCRDs\"\n        \"value\": \"false\"\n      - \"name\": \"repoServer.env[0].name\"\n        \"value\": \"AWS_DEFAULT_REGION\"\n      - \"name\": \"repoServer.env[0].value\"\n        \"value\": \"us-west-2\"\n      - \"name\": \"repoServer.serviceAccount.annotations.eks\\\\.amazonaws\\\\.com/role-arn\"\n        \"value\": \"arn:aws:iam::641456973426:role/testcognito_argocd\"\n      - \"name\": \"repoServer.serviceAccount.create\"\n        \"value\": \"true\"\n      - \"name\": \"repoServer.volumeMounts[0].mountPath\"\n        \"value\": \"/opt/decryptor/bin\"\n      - \"name\": \"repoServer.volumeMounts[0].name\"\n        \"value\": \"decryptor\"\n      - \"name\": \"repoServer.volumes[0].configMap.items[0].key\"\n        \"value\": \"decryptor\"\n      - \"name\": \"repoServer.volumes[0].configMap.items[0].path\"\n        \"value\": \"decryptor\"\n      - \"name\": \"repoServer.volumes[0].configMap.name\"\n        \"value\": \"argocd-decryptor\"\n      - \"name\": \"repoServer.volumes[0].name\"\n        \"value\": \"decryptor\"\n      - \"name\": \"server.config.configManagementPlugins\"\n        \"value\": |\n          - \"generate\":\n              \"args\":\n              - \"/opt/decryptor/bin/decryptor\"\n              \"command\":\n              - \"/usr/bin/python3\"\n            \"init\":\n              \"args\":\n              - \"install\"\n              - \"boto3\"\n              \"command\":\n              - \"/usr/bin/pip3\"\n            \"name\": \"decryptor\"\n    \"repoURL\": \"https://argoproj.github.io/argo-helm\"\n    \"targetRevision\": \"2.7.4\"\n  \"syncPolicy\":\n    \"automated\":\n      \"prune\": true\n      \"selfHeal\": true\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./argocd-applications/argocd.yaml",
            "id": "670087c7a3379fc53c0c65e8e4824f2683af955e",
            "sensitive_content": null,
            "source": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.aws_cognito_user_pool_client.argocd",
            "module.sak_kubeflow.module.acm.aws_acm_certificate.this",
            "module.sak_kubeflow.module.acm.aws_acm_certificate_validation.this",
            "module.sak_kubeflow.module.acm.aws_route53_record.validation",
            "module.sak_kubeflow.module.argocd.aws_kms_ciphertext.client_secret",
            "module.sak_kubeflow.module.argocd.aws_kms_key.this",
            "module.sak_kubeflow.module.argocd.helm_release.this",
            "module.sak_kubeflow.module.argocd.kubernetes_namespace.this",
            "module.sak_kubeflow.module.argocd.module.iam_assumable_role_admin.aws_iam_role.this",
            "module.sak_kubeflow.module.argocd.random_password.this",
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool.this",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.private",
            "module.sak_kubeflow.module.external_dns.aws_route53_zone.public",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow",
      "mode": "managed",
      "type": "null_resource",
      "name": "cognito_users",
      "each": "map",
      "provider": "provider.null",
      "instances": [
        {
          "index_key": "us-west-2:us-west-2_MEY2tGhva:dkharlamov",
          "schema_version": 0,
          "attributes": {
            "id": "2488776053714028584",
            "triggers": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.aws_cognito_user_group.this",
            "module.sak_kubeflow.module.cognito.aws_cognito_user_pool.this"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "null_resource",
      "name": "wait_for_cluster",
      "each": "list",
      "provider": "provider.null",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1239553576001133114",
            "triggers": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group_rule.cluster_private_access"
          ]
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.argocd",
      "mode": "managed",
      "type": "random_password",
      "name": "this",
      "provider": "provider.random",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "none",
            "keepers": null,
            "length": 20,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "override_special": null,
            "result": "BYCfR(h[999-ekmG\u00269Z*",
            "special": true,
            "upper": true
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks.module.node_groups",
      "mode": "managed",
      "type": "random_pet",
      "name": "node_groups",
      "each": "map",
      "provider": "provider.random",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "random_pet",
      "name": "workers",
      "each": "list",
      "provider": "provider.random",
      "instances": []
    },
    {
      "module": "module.sak_kubeflow.module.kubernetes.module.eks",
      "mode": "managed",
      "type": "random_pet",
      "name": "workers_launch_template",
      "each": "list",
      "provider": "provider.random",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "useful-chipmunk",
            "keepers": {
              "lt_name": "testcognito-020210506085858104300000016-1"
            },
            "length": 2,
            "prefix": null,
            "separator": "-"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "new-earwig",
            "keepers": {
              "lt_name": "testcognito-120210506085855675700000014-1"
            },
            "length": 2,
            "prefix": null,
            "separator": "-"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "gentle-wolf",
            "keepers": {
              "lt_name": "testcognito-220210506085855140900000012-1"
            },
            "length": 2,
            "prefix": null,
            "separator": "-"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 0,
          "attributes": {
            "id": "rare-moccasin",
            "keepers": {
              "lt_name": "testcognito-320210506085854802800000010-1"
            },
            "length": 2,
            "prefix": null,
            "separator": "-"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_eks_cluster.this",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_instance_profile.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_iam_role.workers",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_launch_template.workers_launch_template",
            "module.sak_kubeflow.module.kubernetes.module.eks.aws_security_group.workers",
            "module.sak_kubeflow.module.network.module.vpc.aws_subnet.private",
            "module.sak_kubeflow.module.network.module.vpc.aws_vpc.this"
          ]
        }
      ]
    }
  ]
}
